import{_ as s,c as e,o as a,a as t}from"./app.ebd92e94.js";const u=JSON.parse('{"title":"Nodejs-fs-extra文件系统模块及扩展介绍与使用","description":"","frontmatter":{"title":"Nodejs-fs-extra文件系统模块及扩展介绍与使用","outline":"deep"},"headers":[{"level":2,"title":"fs：File system","slug":"fs-file-system","link":"#fs-file-system","children":[{"level":3,"title":"fs.existsSync(path)","slug":"fs-existssync-path","link":"#fs-existssync-path","children":[]},{"level":3,"title":"fs.mkdirSync(path[, options])","slug":"fs-mkdirsync-path-options","link":"#fs-mkdirsync-path-options","children":[]},{"level":3,"title":"fs.readdirSync(path[, options])","slug":"fs-readdirsync-path-options","link":"#fs-readdirsync-path-options","children":[]},{"level":3,"title":"fs.readFileSync(path[, options])","slug":"fs-readfilesync-path-options","link":"#fs-readfilesync-path-options","children":[]},{"level":3,"title":"fs.writeFileSync(file, data[, options])","slug":"fs-writefilesync-file-data-options","link":"#fs-writefilesync-file-data-options","children":[]},{"level":3,"title":"fs.statSync(path[, options])","slug":"fs-statsync-path-options","link":"#fs-statsync-path-options","children":[]},{"level":3,"title":"fs.copyFileSync(src, dest[, mode])","slug":"fs-copyfilesync-src-dest-mode","link":"#fs-copyfilesync-src-dest-mode","children":[]},{"level":3,"title":"fs.mkdirSync(path)","slug":"fs-mkdirsync-path","link":"#fs-mkdirsync-path","children":[]}]},{"level":2,"title":"fs-extra(fs 扩展)","slug":"fs-extra-fs-扩展","link":"#fs-extra-fs-扩展","children":[{"level":3,"title":"fs.pathExistsSync(path: string): boolean","slug":"fs-pathexistssync-path-string-boolean","link":"#fs-pathexistssync-path-string-boolean","children":[]},{"level":3,"title":"fs.pathExists(path: string)","slug":"fs-pathexists-path-string","link":"#fs-pathexists-path-string","children":[]}]}],"relativePath":"node/core/fs.md"}'),n={name:"node/core/fs.md"},i=t(`<h1 id="fs-and-fs-extra-文件系统与扩展" tabindex="-1">fs and fs-extra：文件系统与扩展 <a class="header-anchor" href="#fs-and-fs-extra-文件系统与扩展" aria-hidden="true">#</a></h1><h2 id="fs-file-system" tabindex="-1">fs：File system <a class="header-anchor" href="#fs-file-system" aria-hidden="true">#</a></h2><h3 id="fs-existssync-path" tabindex="-1">fs.existsSync(path) <a class="header-anchor" href="#fs-existssync-path" aria-hidden="true">#</a></h3><p>如果路径存在则返回 true，否则返回 false。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">existsSync</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node:fs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#82AAFF;">existsSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/etc/passwd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)) console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The path exists.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="fs-mkdirsync-path-options" tabindex="-1">fs.mkdirSync(path[, options]) <a class="header-anchor" href="#fs-mkdirsync-path-options" aria-hidden="true">#</a></h3><p>同步地创建目录。 返回 undefined 或创建的第一个目录路径（如果 recursive 为 true）。 这是 fs.mkdir() 的同步版本。</p><h3 id="fs-readdirsync-path-options" tabindex="-1">fs.readdirSync(path[, options]) <a class="header-anchor" href="#fs-readdirsync-path-options" aria-hidden="true">#</a></h3><p>同步读取<strong>目录</strong>的内容。</p><h3 id="fs-readfilesync-path-options" tabindex="-1">fs.readFileSync(path[, options]) <a class="header-anchor" href="#fs-readfilesync-path-options" aria-hidden="true">#</a></h3><p>同步读取<strong>文件</strong>的内容。</p><h3 id="fs-writefilesync-file-data-options" tabindex="-1">fs.writeFileSync(file, data[, options]) <a class="header-anchor" href="#fs-writefilesync-file-data-options" aria-hidden="true">#</a></h3><p>将 data 写入到 file。返回 undefined。</p><h3 id="fs-statsync-path-options" tabindex="-1">fs.statSync(path[, options]) <a class="header-anchor" href="#fs-statsync-path-options" aria-hidden="true">#</a></h3><p>获取路径的文件内容信息。</p><h3 id="fs-copyfilesync-src-dest-mode" tabindex="-1">fs.copyFileSync(src, dest[, mode]) <a class="header-anchor" href="#fs-copyfilesync-src-dest-mode" aria-hidden="true">#</a></h3><p>同步地复制 src 到 dest。</p><h3 id="fs-mkdirsync-path" tabindex="-1">fs.mkdirSync(path) <a class="header-anchor" href="#fs-mkdirsync-path" aria-hidden="true">#</a></h3><p>同步地创建目录。</p><h2 id="fs-extra-fs-扩展" tabindex="-1">fs-extra(fs 扩展) <a class="header-anchor" href="#fs-extra-fs-扩展" aria-hidden="true">#</a></h2><p>【<a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="noreferrer">Github 地址</a>】</p><h3 id="fs-pathexistssync-path-string-boolean" tabindex="-1">fs.pathExistsSync(path: string): boolean <a class="header-anchor" href="#fs-pathexistssync-path-string-boolean" aria-hidden="true">#</a></h3><p><code>fs.existsSync(path)</code> 的别名。如果路径存在则返回 true，否则返回 false。</p><h3 id="fs-pathexists-path-string" tabindex="-1">fs.pathExists(path: string) <a class="header-anchor" href="#fs-pathexists-path-string" aria-hidden="true">#</a></h3><p>异步。返回值为 <code>Promise&lt;boolean&gt;</code>。如果路径存在则返回 true，否则返回 false。</p>`,25),l=[i];function r(o,p,c,d,h,f){return a(),e("div",null,l)}const x=s(n,[["render",r]]);export{u as __pageData,x as default};
