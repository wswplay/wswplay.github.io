import{_ as s,c as a,o as t,b as e}from"./chunks/framework._eNwL97Z.js";const u=JSON.parse('{"title":"概览","description":"","frontmatter":{"title":"概览","outline":"deep"},"headers":[{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"监督学习","slug":"监督学习","link":"#监督学习","children":[{"level":3,"title":"回归问题","slug":"回归问题","link":"#回归问题","children":[]},{"level":3,"title":"分类问题","slug":"分类问题","link":"#分类问题","children":[]}]},{"level":2,"title":"人工智能(AI)","slug":"人工智能-ai","link":"#人工智能-ai","children":[{"level":3,"title":"层级关系","slug":"层级关系","link":"#层级关系","children":[]},{"level":3,"title":"关键区别","slug":"关键区别","link":"#关键区别","children":[]},{"level":3,"title":"为毛深度学习成为 AI 核心","slug":"为毛深度学习成为-ai-核心","link":"#为毛深度学习成为-ai-核心","children":[]}]}],"relativePath":"aiart/deep-learning/overview.md","filePath":"aiart/deep-learning/overview.md"}'),r={name:"aiart/deep-learning/overview.md"};function l(i,n,o,p,d,c){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h1><p><strong>深度学习</strong><sup>deep learning</sup>与经典机器学习方法主要区别：模型由<strong>神经网络</strong>错综复杂交织在一起，包含层层数据转换，节点更有深度、功能更强大，因此被称为深度学习。</p><p>通过使用<strong>更深</strong>（而不是更广）的网络，可以更容易地逼近许多函数。</p><p>大约 2010 年开始，<strong>神经网络算法</strong>变得热门起来，原因有 2 点：</p><ul><li>1、随着互联网的公司的出现，为数亿在线用户提供服务，大规模<strong>数据</strong>集变得触手可及。</li><li>2、廉价又高质量的传感器、廉价的数据存储（克莱德定律）以及廉价计算（摩尔定律）的普及，特别是 <strong>GPU</strong> 的普及，使大规模算力唾手可得。</li></ul><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><p>与传统机器学习方法相比，<strong>深度学习</strong>的一个主要优势是可以<strong>处理不同长度</strong>的数据。</p><p>深度学习方法中最显著的共同点是使用<strong>端到端</strong>训练。也就是说，与其基于单独调整的组件组装系统，不如构建系统，然后联合调整它们的性能。</p><p>除了端到端的训练，人们正在经历从参数统计描述到<strong>完全非参数模型</strong>的转变。</p><p>深度学习不仅取代了传统机器学习的<strong>浅层模型</strong>，而且取代了劳动密集型的<strong>特征工程</strong>。</p><h2 id="监督学习" tabindex="-1">监督学习 <a class="header-anchor" href="#监督学习" aria-label="Permalink to &quot;监督学习&quot;">​</a></h2><p>回归是训练一个回归函数来<strong>输出一个数值</strong>；分类是训练一个分类器来<strong>输出预测的类别</strong>。</p><h3 id="回归问题" tabindex="-1">回归问题 <a class="header-anchor" href="#回归问题" aria-label="Permalink to &quot;回归问题&quot;">​</a></h3><p>当标签取任意数值时，我们称之为回归问题。任何有关<code>有多少</code>的问题很可能就是回归问题。</p><p><strong>损失函数</strong>通常是<strong>平方误差</strong><sup>squared error</sup>的最小化。</p><h3 id="分类问题" tabindex="-1">分类问题 <a class="header-anchor" href="#分类问题" aria-label="Permalink to &quot;分类问题&quot;">​</a></h3><p>这种“哪一个”的问题叫做分类<sup>classification</sup>问题。分类问题希望模型能够预测样本属于哪个类别（<code>category</code>，正式称为类<code>class</code>）。</p><p><strong>请注意，最常见的类别不一定是最终用于决策的类别</strong>。</p><p><strong>损失函数</strong>被称为<strong>交叉熵</strong><sup>cross-entropy</sup>。</p><h2 id="人工智能-ai" tabindex="-1">人工智能(AI) <a class="header-anchor" href="#人工智能-ai" aria-label="Permalink to &quot;人工智能(AI)&quot;">​</a></h2><p>人工智能是计算机科学的一个广义分支，目标是让<strong>机器模拟人类</strong>的智能行为，包括推理、学习、规划、感知、自然语言处理等。</p><p>AI 涵盖所有让机器表现出智能的技术，包括：</p><ul><li><strong>传统方法</strong>：规则系统（如专家系统）、搜索算法（如 A*）、统计学方法（如贝叶斯网络）等。</li><li><strong>机器学习</strong>：通过数据训练模型（如决策树、支持向量机）。</li><li><strong>深度学习</strong>：机器学习的一个子集。</li></ul><div class="tip custom-block"><p class="custom-block-title">我们离一个能够「控制人类」创造者的有知觉的人工智能系统还很远。</p><ul><li>首先，人工智能系统是以一种特定的、面向目标的方式设计、训练和部署的。虽然他们的行为可能会给人一种通用智能的错觉，但设计的基础是规则、启发式和统计模型的结合。</li><li>其次，目前还不存在能够自我改进、自我推理、能够在试图解决一般任务的同时，修改、扩展和改进自己的架构的“人工通用智能”工具。</li></ul></div><h3 id="层级关系" tabindex="-1">层级关系 <a class="header-anchor" href="#层级关系" aria-label="Permalink to &quot;层级关系&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span>人工智能（AI）</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── 传统AI（规则系统、搜索算法等）</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└── 机器学习（ML）</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├── 传统机器学习（SVM、决策树等）</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    └── 深度学习（DL）</span></span>
<span class="line"><span>        │</span></span>
<span class="line"><span>        ├── CNN、RNN、Transformer等</span></span>
<span class="line"><span>        └── ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="关键区别" tabindex="-1">关键区别 <a class="header-anchor" href="#关键区别" aria-label="Permalink to &quot;关键区别&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>维度</strong></th><th><strong>人工智能（AI）</strong></th><th><strong>机器学习（ML）</strong></th><th><strong>深度学习（DL）</strong></th></tr></thead><tbody><tr><td><strong>范围</strong></td><td>最广（包含所有智能系统）</td><td>AI 的子集</td><td>ML 的子集</td></tr><tr><td><strong>数据依赖</strong></td><td>不一定需要数据</td><td>依赖数据</td><td>需要大量数据</td></tr><tr><td><strong>特征处理</strong></td><td>人工规则或算法</td><td>人工特征工程</td><td>自动特征学习</td></tr><tr><td><strong>典型应用</strong></td><td>象棋 AI、专家系统</td><td>垃圾邮件分类、房价预测</td><td>图像识别、ChatGPT、自动驾驶</td></tr></tbody></table><h3 id="为毛深度学习成为-ai-核心" tabindex="-1">为毛深度学习成为 AI 核心 <a class="header-anchor" href="#为毛深度学习成为-ai-核心" aria-label="Permalink to &quot;为毛深度学习成为 AI 核心&quot;">​</a></h3><ul><li><strong>性能突破</strong>：在图像、语音、NLP 等领域远超传统方法。</li><li><strong>端到端学习</strong>：无需手工设计特征，简化流程。</li><li><strong>硬件支持</strong>：GPU/TPU 的普及加速了训练。</li></ul><p>深度学习是推动当前 AI 爆发式发展的关键技术，但 AI 的范畴远不止于此。未来 AI 的发展可能会结合深度学习与其他方法（如符号逻辑、强化学习），形成更通用的智能系统。</p>`,31)]))}const h=s(r,[["render",l]]);export{u as __pageData,h as default};
