import{_ as a,c as n,o,b as l}from"./chunks/framework._eNwL97Z.js";const i=JSON.parse('{"title":"Nodejs path.resolve用法","description":"","frontmatter":{"title":"Nodejs path.resolve用法"},"headers":[{"level":2,"title":"Path.resolve()","slug":"path-resolve","link":"#path-resolve","children":[]}],"relativePath":"node/core/path.md","filePath":"node/core/path.md"}'),p={name:"node/core/path.md"};function e(t,s,r,c,E,u){return o(),n("div",null,s[0]||(s[0]=[l(`<h1 id="path" tabindex="-1">Path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;Path&quot;">​</a></h1><h2 id="path-resolve" tabindex="-1">Path.resolve() <a class="header-anchor" href="#path-resolve" aria-label="Permalink to &quot;Path.resolve()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此方法，在拼装<code>Vue-Router</code>路径时，特别有用</p></div><p>resolve 将路径或路径片段的序列解析为绝对路径。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//引入node的path模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;/foo/bar/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;/foo/bar/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;/baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;../baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;/foo/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;home&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;/foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;../baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;/foo/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;home&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;../baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;当前工作目录/home/foo/baz&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;home&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;foo/bar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;../baz&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// returns &#39;当前工作目录/home/foo/baz&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>怎么理解呢？上面的操作，其实相当于命令行中的 <code>cd</code> 操作，举例如下：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">path.resolve(</span><span style="color:#B392F0;">&#39;/foo/bar&#39;</span><span style="color:#B392F0;">,</span><span style="color:#9ECBFF;"> &#39;../baz&#39;</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;"># returns &#39;/foo/baz&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 相当于</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#9ECBFF;"> /foo/bar</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#9ECBFF;"> ..</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#9ECBFF;"> baz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,7)]))}const b=a(p,[["render",e]]);export{i as __pageData,b as default};
