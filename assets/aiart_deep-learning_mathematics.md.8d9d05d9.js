import{_ as t,c as e,o as r,a as n}from"./app.f57e7a55.js";const u=JSON.parse('{"title":"数学基础","description":"","frontmatter":{"title":"数学基础","outline":"deep"},"headers":[{"level":2,"title":"线性代数","slug":"线性代数","link":"#线性代数","children":[{"level":3,"title":"张量(tensor)","slug":"张量-tensor","link":"#张量-tensor","children":[]},{"level":3,"title":"范数(norm)","slug":"范数-norm","link":"#范数-norm","children":[]}]},{"level":2,"title":"微积分(导数-梯度)","slug":"微积分-导数-梯度","link":"#微积分-导数-梯度","children":[{"level":3,"title":"为什么叫「微积分」","slug":"为什么叫「微积分」","link":"#为什么叫「微积分」","children":[]}]}],"relativePath":"aiart/deep-learning/mathematics.md"}'),s={name:"aiart/deep-learning/mathematics.md"},a=n('<h1 id="数学基础" tabindex="-1">数学基础 <a class="header-anchor" href="#数学基础" aria-hidden="true">#</a></h1><h2 id="线性代数" tabindex="-1">线性代数 <a class="header-anchor" href="#线性代数" aria-hidden="true">#</a></h2><h3 id="张量-tensor" tabindex="-1">张量(tensor) <a class="header-anchor" href="#张量-tensor" aria-hidden="true">#</a></h3><p>就像<strong>向量</strong>是<strong>标量</strong>的推广，<strong>矩阵</strong>是向量的推广一样，我们可以构建具有更多轴的数据结构。</p><p>向量是一阶张量，矩阵是二阶张量。 张量用特殊字体的大写字母表示。</p><h3 id="范数-norm" tabindex="-1">范数(norm) <a class="header-anchor" href="#范数-norm" aria-hidden="true">#</a></h3><p>线性代数中最有用的一些运算符是范数。 非正式地说，向量的范数是表示一个向量有多大。 这里考虑的大小（size）概念不涉及维度，而是分量的大小。</p><ul><li><strong>L1 范数</strong>，是向量元素<strong>绝对值之和</strong>。</li><li><strong>L2 范数</strong>，是向量元素<strong>平方和的平方根</strong>。在 L2 范数中常常省略下标 2，也就是说||x||等同于||x||2。</li></ul><h2 id="微积分-导数-梯度" tabindex="-1">微积分(导数-梯度) <a class="header-anchor" href="#微积分-导数-梯度" aria-hidden="true">#</a></h2><h3 id="为什么叫「微积分」" tabindex="-1">为什么叫「微积分」 <a class="header-anchor" href="#为什么叫「微积分」" aria-hidden="true">#</a></h3><p>从微积分基本定理可以看出，积分和微分实际上是逆过程：</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>微分是通过局部的变化率来描述函数的行为。</li><li>积分是通过累积这些局部的变化（面积）来得到总体的行为。</li></ul></div><p>将微分和积分联系起来的基本定理显示了它们是相辅相成的，解决问题时经常需要同时使用。</p><p>比如，解决一个运动问题，可能需要<code>先用微分来描述速度，然后用积分来计算距离</code>。因此，在数学中，这两个操作结合起来被称为「微积分」。</p><p><strong>微分</strong>和<strong>积分</strong>是微积分的两个分支，<strong>微分</strong>可以应用于深度学习中的<strong>优化</strong>问题。</p><p><strong>导数</strong>可以被解释为函数相对于其变量的<strong>瞬时变化率(速度)</strong>，它也是函数曲线的<strong>切线的斜率</strong>。</p><p><strong>梯度</strong>是一个<strong>向量</strong>，其分量是多变量函数相对于其所有变量的<strong>偏导数</strong>。</p><p><strong>链式法则</strong>，可以用来微分复合函数。</p>',18),o=[a];function i(l,d,h,c,g,p){return r(),e("div",null,o)}const m=t(s,[["render",i]]);export{u as __pageData,m as default};
