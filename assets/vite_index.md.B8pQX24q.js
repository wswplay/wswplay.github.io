import{_ as i,c as a,o as e,b as n}from"./chunks/framework._eNwL97Z.js";const c=JSON.parse('{"title":"Vite基本使用","description":"","frontmatter":{"title":"Vite基本使用"},"headers":[{"level":2,"title":"用 Vite 快速构建 Vue 项目","slug":"用-vite-快速构建-vue-项目","link":"#用-vite-快速构建-vue-项目","children":[]},{"level":2,"title":"import.meta.url","slug":"import-meta-url","link":"#import-meta-url","children":[]}],"relativePath":"vite/index.md","filePath":"vite/index.md"}'),t={name:"vite/index.md"};function l(p,s,h,r,k,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vite-为开发提供极速响应" tabindex="-1">Vite：为开发提供极速响应 <a class="header-anchor" href="#vite-为开发提供极速响应" aria-label="Permalink to &quot;Vite：为开发提供极速响应&quot;">​</a></h1><p><a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">Vite</a>，是一种新型前端构建工具，主要由两部分组成：<br> 1、<strong>一个开发服务器</strong>。基于 <code>原生 ES 模块</code> ，提供模块热更新（HMR）。<br> 2、<strong>一套构建指令</strong>。基于 <a href="https://rollupjs.org/" target="_blank" rel="noreferrer">Rollup.js</a> ，可输出用于生产环境的高度优化过的静态资源。</p><h2 id="用-vite-快速构建-vue-项目" tabindex="-1">用 Vite 快速构建 Vue 项目 <a class="header-anchor" href="#用-vite-快速构建-vue-项目" aria-label="Permalink to &quot;用 Vite 快速构建 Vue 项目&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm 6.x</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm 7+，需要加上额外的双短横线</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>Vite</code>强缓存依赖包，所以本地调试<code>依赖源码</code>(如 Vue)，成为一个棘手的问题。<a href="https://cn.vitejs.dev/guide/dep-pre-bundling.html#file-system-cache" target="_blank" rel="noreferrer">Vite 缓存</a></p><div class="tip custom-block"><p class="custom-block-title">这样根本没有解决问题啊？！！</p><p>1、通过浏览器调试工具的 Network 选项卡暂时禁用缓存；<br> 2、重启 Vite dev server，并添加 --force 命令以重新构建依赖；<br> 3、重新载入页面。</p></div><h2 id="import-meta-url" tabindex="-1">import.meta.url <a class="header-anchor" href="#import-meta-url" aria-label="Permalink to &quot;import.meta.url&quot;">​</a></h2><p><code>import.meta.url</code>在模块内部使用，返回当前模块的路径。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// xxx.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/xxx/xxx.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果模块里面还有一个数据文件<code>data.txt</code>，那么就可以用下面的代码，获取这个数据文件的路径。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,11)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
