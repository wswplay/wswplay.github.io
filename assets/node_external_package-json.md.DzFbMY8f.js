import{_ as n,c as a,o as e,b as l}from"./chunks/framework.DUr976bL.js";const E=JSON.parse('{"title":"package.json生成,设置,各字段介绍与作用","description":"","frontmatter":{"title":"package.json生成,设置,各字段介绍与作用"},"headers":[{"level":2,"title":"main / browser","slug":"main-browser","link":"#main-browser","children":[]},{"level":2,"title":"module","slug":"module","link":"#module","children":[]},{"level":2,"title":"type","slug":"type","link":"#type","children":[]},{"level":2,"title":"types / typings","slug":"types-typings","link":"#types-typings","children":[]},{"level":2,"title":"files","slug":"files","link":"#files","children":[]},{"level":2,"title":"bin","slug":"bin","link":"#bin","children":[]},{"level":2,"title":"exports","slug":"exports","link":"#exports","children":[]},{"level":2,"title":"repository","slug":"repository","link":"#repository","children":[]},{"level":2,"title":"packageManager","slug":"packagemanager","link":"#packagemanager","children":[]}],"relativePath":"node/external/package-json.md","filePath":"node/external/package-json.md"}'),o={name:"node/external/package-json.md"};function p(t,s,r,c,i,u){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="package-json-字段介绍与作用" tabindex="-1">package.json 字段介绍与作用 <a class="header-anchor" href="#package-json-字段介绍与作用" aria-label="Permalink to &quot;package.json 字段介绍与作用&quot;">​</a></h1><h2 id="main-browser" tabindex="-1">main / browser <a class="header-anchor" href="#main-browser" aria-label="Permalink to &quot;main / browser&quot;">​</a></h2><p><code>main</code>字段用来指定包的入口文件。如果不设置,则默认使用包的根目录中的<code>index.js</code>文件作为入口。<br><code>main</code>字段可以在<code>browser</code>环境和<code>Nodejs</code>环境都可以使用，如果使用<code>browser</code>字段，则表明只能在浏览器环境下使，不能用于服务端。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;main&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;module&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist/vue.runtime.esm-bundler.js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;module&quot;">​</a></h2><p>指定 ES6 模块化(esm)引入的入口文件。如<code>import xxx from xxx</code>；<br><strong>模块化主流标准</strong>：CommonJS、AMD、CMD、UMD、ES6 【<a href="/basic/javascript/#模块化及规范">模块化有哪些规范</a>】</p><table tabindex="0"><thead><tr><th>字段</th><th style="text-align:center;">规范</th></tr></thead><tbody><tr><td>main</td><td style="text-align:center;">cjs</td></tr><tr><td>module</td><td style="text-align:center;">esm</td></tr><tr><td>browser</td><td style="text-align:center;">umd</td></tr></tbody></table><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>不要使用 browser 字段，永远使用 module 字段支持 Tree-shaking。如必须支持 umd ，可以添加至 umd:main 字段（<a href="https://github.com/developit/microbundle#specifying-builds-in-packagejson" target="_blank" rel="noreferrer">Specifying builds in package.json</a>）</p></div><h2 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h2><p>用于定义 package.json 文件和该文件所在目录根目录中 <code>.js</code> 文件和无扩展名文件的模块化处理规范，默认值为<code>&#39;commonjs&#39;</code>。</p><blockquote><p>在早期的 nodejs 版本中，node 仅支持 Commonjs 模块化方案，不过在 nodejs 版本 13.2.0 中，node 正式支持 ES Modules 模块化，在 package.json 中的 type 字段声明。</p></blockquote><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>type 字段省略，则默认采用 commonjs 规范，当指定值为 module 时采用 ESModule 规范</li><li>node 官方建议包的开发者明确指定 package.json 中的 type 字段值</li><li>不论 package.json 中的 type 字段为何值，.mjs 的文件都按照 es 模块来处理，.cjs 的文件都按照 commonjs 模块来处理</li></ul></div><h2 id="types-typings" tabindex="-1">types / typings <a class="header-anchor" href="#types-typings" aria-label="Permalink to &quot;types / typings&quot;">​</a></h2><p>指定类型文件位置。<code>js</code>项目配置用<code>types</code>，<code>ts</code>项目用<code>typings</code>。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;typings&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist/types/index.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="files" tabindex="-1">files <a class="header-anchor" href="#files" aria-label="Permalink to &quot;files&quot;">​</a></h2><p><code>files</code>字段是一个数组，指定哪些文件需要发布到<code>registry</code>。如果指定的是文件夹，则整个文件夹都会被提交。如下<code>Vue</code>的<code>files</code>字段：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;files&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;index.mjs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;dist&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;compiler-sfc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;server-renderer&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;macros.d.ts&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;macros-global.d.ts&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;ref-macros.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="bin" tabindex="-1">bin <a class="header-anchor" href="#bin" aria-label="Permalink to &quot;bin&quot;">​</a></h2><p>脚本配置。一些包，可以作为命令行工具使用。通过<code>npm install package_name -g</code>命令可以将脚本添加到执行路径中，之后可以在命令行中直接执行。</p><h2 id="exports" tabindex="-1">exports <a class="header-anchor" href="#exports" aria-label="Permalink to &quot;exports&quot;">​</a></h2><p>配置不同环境对应的模块入口文件，优先级最高。<code>exports</code>存在时，<code>main</code>字段会失效。如下为<code>Vue</code>的<code>exports</code>字段：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;exports&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;.&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;import&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">        &quot;node&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./index.mjs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">        &quot;default&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./dist/vue.runtime.esm-bundler.js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;require&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;types&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./dist/vue.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./server-renderer&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;import&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./server-renderer/index.mjs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;require&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./server-renderer/index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;types&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./server-renderer/index.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./compiler-sfc&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;import&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./compiler-sfc/index.mjs&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;require&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./compiler-sfc/index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;types&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./compiler-sfc/index.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./dist/*&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./dist/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./package.json&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./package.json&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./macros&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./macros.d.ts&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./macros-global&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./macros-global.d.ts&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;./ref-macros&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;./ref-macros.d.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="repository" tabindex="-1">repository <a class="header-anchor" href="#repository" aria-label="Permalink to &quot;repository&quot;">​</a></h2><p>用于指定代码所在的位置，通常使用<code>Github</code>库地址。</p><h2 id="packagemanager" tabindex="-1">packageManager <a class="header-anchor" href="#packagemanager" aria-label="Permalink to &quot;packageManager&quot;">​</a></h2><p>定义处理当前项目时预期使用的包管理器，该领域目前处于<code>试验阶段</code>。<br> 它可以设置为任何<a href="http://nodejs.cn/api-v18/corepack.html#supported-package-managers" target="_blank" rel="noreferrer">支持的包管理器</a>，并确保您的团队使用完全相同的包管理器版本，而无需安装 Node.js 以外的任何其他东西。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;packageManager&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pnpm@7.27.0&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,29)]))}const b=n(o,[["render",p]]);export{E as __pageData,b as default};
