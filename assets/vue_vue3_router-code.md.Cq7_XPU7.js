import{_ as n,c as a,o as l,b as p}from"./chunks/framework._eNwL97Z.js";const u=JSON.parse('{"title":"Vue-Router源码分析","description":"","frontmatter":{"title":"Vue-Router源码分析"},"headers":[{"level":2,"title":"初始化安装 install","slug":"初始化安装-install","link":"#初始化安装-install","children":[]},{"level":2,"title":"创建路由 createRouter","slug":"创建路由-createrouter","link":"#创建路由-createrouter","children":[]},{"level":2,"title":"添加匹配 createRouterMatcher/addRoute","slug":"添加匹配-createroutermatcher-addroute","link":"#添加匹配-createroutermatcher-addroute","children":[]},{"level":2,"title":"触发导航、执行守卫钩子 navigate","slug":"触发导航、执行守卫钩子-navigate","link":"#触发导航、执行守卫钩子-navigate","children":[]},{"level":2,"title":"路由视图 RouterView","slug":"路由视图-routerview","link":"#路由视图-routerview","children":[]},{"level":2,"title":"辅助信息集锦","slug":"辅助信息集锦","link":"#辅助信息集锦","children":[]}],"relativePath":"vue/vue3/router-code.md","filePath":"vue/vue3/router-code.md"}'),e={name:"vue/vue3/router-code.md"};function o(r,s,c,t,E,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="vue-router-源码摘要" tabindex="-1">Vue-Router 源码摘要 <a class="header-anchor" href="#vue-router-源码摘要" aria-label="Permalink to &quot;Vue-Router 源码摘要&quot;">​</a></h1><h2 id="初始化安装-install" tabindex="-1">初始化安装 install <a class="header-anchor" href="#初始化安装-install" aria-label="Permalink to &quot;初始化安装 install&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> router</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Router</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  install</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">app</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> App</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> router</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> this</span></span>
<span class="line"><span style="color:#6A737D;">    // 注册全局组件</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.</span><span style="color:#B392F0;">component</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;RouterLink&#39;</span><span style="color:#E1E4E8;">, RouterLink)</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.</span><span style="color:#B392F0;">component</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;RouterView&#39;</span><span style="color:#E1E4E8;">, RouterView)</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.config.globalProperties.$router </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> router</span></span>
<span class="line"><span style="color:#E1E4E8;">    Object.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(app.config.globalProperties, </span><span style="color:#9ECBFF;">&#39;$route&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">      enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">      get</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> unref</span><span style="color:#E1E4E8;">(currentRoute),</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> reactiveRoute</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#F97583;">    for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> key</span><span style="color:#F97583;"> in</span><span style="color:#79B8FF;"> START_LOCATION_NORMALIZED</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      reactiveRoute[key] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> computed</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> currentRoute.value[key])</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#6A737D;">    // 数据注入</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.</span><span style="color:#B392F0;">provide</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">    // 卸载</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> unmountApp</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> app.unmount</span></span>
<span class="line"><span style="color:#E1E4E8;">    installedApps.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(app)</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.</span><span style="color:#B392F0;">unmount</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">      installedApps.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(app)</span></span>
<span class="line"><span style="color:#B392F0;">      unmountApp</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> router</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="创建路由-createrouter" tabindex="-1">创建路由 createRouter <a class="header-anchor" href="#创建路由-createrouter" aria-label="Permalink to &quot;创建路由 createRouter&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> createRouter</span><span style="color:#E1E4E8;">(options) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> matcher</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> createRouterMatcher</span><span style="color:#E1E4E8;">(options.routes, options) {</span></span>
<span class="line"><span style="color:#6A737D;">    // 优化排序后的匹配项数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    const matchers: RouteRecordMatcher[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">    const matcherMap </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">    function</span><span style="color:#B392F0;"> getRecordMatcher</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteRecordName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> matcherMap.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(name)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#F97583;">    function</span><span style="color:#B392F0;"> addRoute</span><span style="color:#E1E4E8;">(...) { </span><span style="color:#6A737D;">/* createRouterMatcher/addRoute */</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">    routes.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">route</span><span style="color:#F97583;"> =&gt;</span><span style="color:#B392F0;"> addRoute</span><span style="color:#E1E4E8;">(route))</span></span>
<span class="line"><span style="color:#E1E4E8;">    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> routerHistory</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> options.history</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> beforeGuards</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCallbacks</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">NavigationGuardWithThis</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">&gt;&gt;()</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> beforeResolveGuards</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCallbacks</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">NavigationGuardWithThis</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">&gt;&gt;()</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> afterGuards</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCallbacks</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">NavigationHookAfter</span><span style="color:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> currentRoute</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> shallowRef</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">RouteLocationNormalizedLoaded</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#79B8FF;">    START_LOCATION_NORMALIZED</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#6A737D;">  // 改变路由</span></span>
<span class="line"><span style="color:#F97583;">  function</span><span style="color:#B392F0;"> push</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">to</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteLocationRaw</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#B392F0;"> pushWithRedirect</span><span style="color:#E1E4E8;">(to)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  function</span><span style="color:#B392F0;"> pushWithRedirect</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">redirectedFrom</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> targetLocation</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteLocation</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (pendingLocation </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> resolve</span><span style="color:#E1E4E8;">(to))</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> shouldRedirect</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> handleRedirectRecord</span><span style="color:#E1E4E8;">(targetLocation)</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (shouldRedirect) </span><span style="color:#B392F0;">pushWithRedirect</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">    let</span><span style="color:#E1E4E8;"> failure</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> NavigationFailure</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> void</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> undefined</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> (failure </span><span style="color:#F97583;">?</span><span style="color:#79B8FF;"> Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(failure) </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> navigate</span><span style="color:#E1E4E8;">(toLocation, from)).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 执行 全局钩子 afterEach</span></span>
<span class="line"><span style="color:#B392F0;">      triggerAfterEach</span><span style="color:#E1E4E8;">(to, from, failure) {</span></span>
<span class="line"><span style="color:#F97583;">        for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> guard</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> afterGuards.</span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">()) </span><span style="color:#B392F0;">guard</span><span style="color:#E1E4E8;">(to, from, failure)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#B392F0;"> go</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">delta</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> number</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> routerHistory.</span><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;">(delta)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> installedApps</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Set</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> router</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Router</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    currentRoute,</span></span>
<span class="line"><span style="color:#E1E4E8;">    addRoute,</span></span>
<span class="line"><span style="color:#E1E4E8;">    beforeEach: beforeGuards.add,</span></span>
<span class="line"><span style="color:#E1E4E8;">    beforeResolve: beforeResolveGuards.add,</span></span>
<span class="line"><span style="color:#E1E4E8;">    afterEach: afterGuards.add,</span></span>
<span class="line"><span style="color:#B392F0;">    install</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">app</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> App</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">/* 如下 */</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> router</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="添加匹配-createroutermatcher-addroute" tabindex="-1">添加匹配 createRouterMatcher/addRoute <a class="header-anchor" href="#添加匹配-createroutermatcher-addroute" aria-label="Permalink to &quot;添加匹配 createRouterMatcher/addRoute&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> addRoute</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">  record</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteRecordRaw</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">  parent</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> RouteRecordMatcher</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">  originalRecord</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> RouteRecordMatcher</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> mainNormalizedRecord</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> normalizeRouteRecord</span><span style="color:#E1E4E8;">(record) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    return {</span></span>
<span class="line"><span style="color:#B392F0;">      path</span><span style="color:#E1E4E8;">: record.path,</span></span>
<span class="line"><span style="color:#B392F0;">      redirect</span><span style="color:#E1E4E8;">: record.redirect,</span></span>
<span class="line"><span style="color:#B392F0;">      name</span><span style="color:#E1E4E8;">: record.name,</span></span>
<span class="line"><span style="color:#B392F0;">      meta</span><span style="color:#E1E4E8;">: record.meta </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#F97583;">      ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> normalizedRecords</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> [mainNormalizedRecord]</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> matcher</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteRecordMatcher</span></span>
<span class="line"><span style="color:#F97583;">  for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> normalizedRecord</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> normalizedRecords) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    matcher </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createRouteRecordMatcher</span><span style="color:#E1E4E8;">(normalizedRecord, parent, options) {</span></span>
<span class="line"><span style="color:#6A737D;">      // normalizedRecord =&gt; record</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> parser</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> tokensToParser</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">tokenizePath</span><span style="color:#E1E4E8;">(record.path), options)</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> matcher</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteRecordMatcher</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> assign</span><span style="color:#E1E4E8;">(parser, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        record,</span></span>
<span class="line"><span style="color:#E1E4E8;">        parent,</span></span>
<span class="line"><span style="color:#E1E4E8;">        children: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">        alias: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> matcher</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (mainNormalizedRecord.children) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> children</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> mainNormalizedRecord.children</span></span>
<span class="line"><span style="color:#F97583;">      for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> children.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#B392F0;">        addRoute</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          children[i],</span></span>
<span class="line"><span style="color:#E1E4E8;">          matcher,</span></span>
<span class="line"><span style="color:#E1E4E8;">          originalRecord </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> originalRecord.children[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    originalRecord </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> originalRecord </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> matcher</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#B392F0;">      insertMatcher</span><span style="color:#E1E4E8;">(matcher) {</span></span>
<span class="line"><span style="color:#F97583;">        let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#F97583;">        while</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> matchers.</span><span style="color:#79B8FF;">length</span><span style="color:#F97583;"> &amp;&amp;</span><span style="color:#F97583;"> ...</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          i</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        matchers.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(i, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, matcher)</span></span>
<span class="line"><span style="color:#6A737D;">        // 缓存记录</span></span>
<span class="line"><span style="color:#F97583;">        if</span><span style="color:#E1E4E8;"> (matcher.record.name </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#F97583;"> !</span><span style="color:#B392F0;">isAliasRecord</span><span style="color:#E1E4E8;">(matcher)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          matcherMap.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(matcher.record.name, matcher)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h2 id="触发导航、执行守卫钩子-navigate" tabindex="-1">触发导航、执行守卫钩子 navigate <a class="header-anchor" href="#触发导航、执行守卫钩子-navigate" aria-label="Permalink to &quot;触发导航、执行守卫钩子 navigate&quot;">​</a></h2><p><a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html" target="_blank" rel="noreferrer">官网文档：守卫钩子</a></p><div class="tip custom-block"><p class="custom-block-title">钩子分为 3 种：</p><ol><li>全局钩子：beforeEach、beforeResolve、afterEach</li><li>配置文件内钩子：beforeEnter</li><li>组件内钩子：beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave</li></ol></div><p>钩子执行顺序示意图：</p><blockquote><p><code>导航push</code> =&gt; <code>pushWithRedirect</code> =&gt; <code>navigate</code> =&gt; <code>失活组件beforeRouteLeave</code> =&gt; <code>全局beforeEach</code> =&gt; <code>重用组件beforeRouteUpdate</code> =&gt; <code>路由文件beforeEnter</code> =&gt; <code>解析异步路由组件</code> =&gt; <code>激活组件beforeRouteEnter</code> =&gt; <code>全局beforeResolve</code> =&gt; <code>导航被确认</code> =&gt; <code>全局afterEach</code> =&gt; <code>触发DOM更新</code> =&gt; <code>beforeRouteEnter中回调函数 next(vm)</code></p></blockquote><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> navigate</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> guards</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Lazy</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">&gt;[];</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">leavingRecords</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">updatingRecords</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">enteringRecords</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#B392F0;">    extractChangingRecords</span><span style="color:#E1E4E8;">(to, from);</span></span>
<span class="line"><span style="color:#6A737D;">  // 提取 组件内钩子 beforeRouteLeave</span></span>
<span class="line"><span style="color:#E1E4E8;">  guards </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> extractComponentsGuards</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    leavingRecords.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;beforeRouteLeave&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    to,</span></span>
<span class="line"><span style="color:#E1E4E8;">    from</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#6A737D;">  // 提取 setup 状态下钩子 beforeRouteLeave</span></span>
<span class="line"><span style="color:#F97583;">  for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> record</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> leavingRecords) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    record.leaveGuards.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">guard</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">guardToPromiseFn</span><span style="color:#E1E4E8;">(guard, to, from));</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 导航取消确认 机制</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> canceledNavigationCheck</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> checkCanceledNavigationAndReject.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#79B8FF;">    null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    to,</span></span>
<span class="line"><span style="color:#E1E4E8;">    from</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">  guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(canceledNavigationCheck);</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#B392F0;"> runGuardQueue</span><span style="color:#E1E4E8;">(guards)</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 解析、执行 全局钩子 beforeEach</span></span>
<span class="line"><span style="color:#E1E4E8;">      guards </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#F97583;">      for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> guard</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> beforeGuards.</span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">guardToPromiseFn</span><span style="color:#E1E4E8;">(guard, to, from));</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(canceledNavigationCheck);</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#B392F0;"> runGuardQueue</span><span style="color:#E1E4E8;">(guards);</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 解析、执行重用 组件内钩子 beforeRouteUpdate</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 解析、执行 配置文件钩子 beforeEnter</span></span>
<span class="line"><span style="color:#E1E4E8;">      guards </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#F97583;">      for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> record</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> to.matched) {</span></span>
<span class="line"><span style="color:#F97583;">        if</span><span style="color:#E1E4E8;"> (record.beforeEnter </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#F97583;"> !</span><span style="color:#E1E4E8;">from.matched.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(record)) {</span></span>
<span class="line"><span style="color:#F97583;">          if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(record.beforeEnter)) {</span></span>
<span class="line"><span style="color:#F97583;">            for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> beforeEnter</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> record.beforeEnter)</span></span>
<span class="line"><span style="color:#E1E4E8;">              guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">guardToPromiseFn</span><span style="color:#E1E4E8;">(beforeEnter, to, from));</span></span>
<span class="line"><span style="color:#E1E4E8;">          } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">guardToPromiseFn</span><span style="color:#E1E4E8;">(record.beforeEnter, to, from));</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      guards.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(canceledNavigationCheck);</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#B392F0;"> runGuardQueue</span><span style="color:#E1E4E8;">(guards);</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 解析、执行 组件内钩子 beforeRouteEnter</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 解析、执行 全局钩子 beforeResolve</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> runGuardQueue</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">guards</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Lazy</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">&gt;[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> guards.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#FFAB70;">promise</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">guard</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> promise.</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> guard</span><span style="color:#E1E4E8;">()),</span></span>
<span class="line"><span style="color:#79B8FF;">    Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="路由视图-routerview" tabindex="-1">路由视图 RouterView <a class="header-anchor" href="#路由视图-routerview" aria-label="Permalink to &quot;路由视图 RouterView&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> const</span><span style="color:#79B8FF;"> RouterView</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> RouterViewImpl;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> const</span><span style="color:#79B8FF;"> RouterViewImpl</span><span style="color:#F97583;"> =</span><span style="color:#6A737D;"> /*#__PURE__*/</span><span style="color:#B392F0;"> defineComponent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;RouterView&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  props: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      type: String </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> PropType</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="color:#E1E4E8;">      default: </span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    route: Object </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> PropType</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">RouteLocationNormalizedLoaded</span><span style="color:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#B392F0;">  setup</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">props</span><span style="color:#E1E4E8;">, { </span><span style="color:#FFAB70;">attrs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">slots</span><span style="color:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="color:#6A737D;">    // 获取当前路由及匹配项</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> injectedRoute</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> inject</span><span style="color:#E1E4E8;">(routerViewLocationKey)</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> routeToDisplay</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> computed</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">RouteLocationNormalizedLoaded</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> props.route </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> injectedRoute.value</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> injectedDepth</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> inject</span><span style="color:#E1E4E8;">(viewDepthKey, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> matchedRouteRef</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> computed</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">RouteLocationMatched</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> undefined</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> routeToDisplay.value.matched[depth.value]</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#6A737D;">    // 返回值 为RouterView组件 render 函数</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">      // 当前路由</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> route</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> routeToDisplay.value;</span></span>
<span class="line"><span style="color:#6A737D;">      // 提取 命中路由记录中对应名字视图里的 对应组件</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> currentName</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> props.name;</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> matchedRoute</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> matchedRouteRef.value;</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> ViewComponent</span><span style="color:#F97583;"> =</span></span>
<span class="line"><span style="color:#E1E4E8;">        matchedRoute </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> matchedRoute.components</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">[currentName];</span></span>
<span class="line"><span style="color:#6A737D;">      // 创建 vnode</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> component</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> h</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        ViewComponent,</span></span>
<span class="line"><span style="color:#B392F0;">        assign</span><span style="color:#E1E4E8;">({}, routeProps, attrs, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          onVnodeUnmounted,</span></span>
<span class="line"><span style="color:#E1E4E8;">          ref: viewRef,</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">      );</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> component;</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="辅助信息集锦" tabindex="-1">辅助信息集锦 <a class="header-anchor" href="#辅助信息集锦" aria-label="Permalink to &quot;辅助信息集锦&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> const</span><span style="color:#79B8FF;"> START_LOCATION_NORMALIZED</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RouteLocationNormalizedLoaded</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  path: </span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  params: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  query: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  hash: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  fullPath: </span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  matched: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  meta: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  redirectedFrom: </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,17)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
