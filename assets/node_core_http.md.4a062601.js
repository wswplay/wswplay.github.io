import{_ as e,c as t,o as r,a}from"./app.5a7be231.js";const v=JSON.parse('{"title":"Nodejs-http模块及扩展介绍与使用","description":"","frontmatter":{"title":"Nodejs-http模块及扩展介绍与使用","outline":"deep"},"headers":[{"level":2,"title":"http 模块","slug":"http-模块","link":"#http-模块","children":[{"level":3,"title":"http.createServer()","slug":"http-createserver","link":"#http-createserver","children":[]}]}],"relativePath":"node/core/http.md"}'),h={name:"node/core/http.md"},c=a('<h1 id="http-模块及扩展" tabindex="-1">http 模块及扩展 <a class="header-anchor" href="#http-模块及扩展" aria-hidden="true">#</a></h1><h2 id="http-模块" tabindex="-1">http 模块 <a class="header-anchor" href="#http-模块" aria-hidden="true">#</a></h2><h3 id="http-createserver" tabindex="-1">http.createServer() <a class="header-anchor" href="#http-createserver" aria-hidden="true">#</a></h3><p>此方法将创建一个 <code>HTTP Server</code> 对象，可以监听计算机上目标端口，并执行一个函数发出请求。将计算机变成一个 HTTP 服务器。</p>',4),d=[c];function s(n,o,p,i,_,l){return r(),t("div",null,d)}const f=e(h,[["render",s]]);export{v as __pageData,f as default};
