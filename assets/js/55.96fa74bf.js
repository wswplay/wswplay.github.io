(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{476:function(t,a,i){"use strict";i.r(a);var e=i(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p",[t._v("你查看文档SpotLight、DirectionalLight、环境光AmbientLight等光源对象都有一个共同的基类Light，光源Light也有一个基类Object3D。也就是说Threejs环境光、点光源等子类光源可以继承Light和Object3D两个父类的属性和方法。")]),t._v(" "),i("h2",{attrs:{id:"环境光ambientlight"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#环境光ambientlight"}},[t._v("#")]),t._v(" 环境光AmbientLight")]),t._v(" "),i("h2",{attrs:{id:"点光源pointlight"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#点光源pointlight"}},[t._v("#")]),t._v(" 点光源PointLight")]),t._v(" "),i("h2",{attrs:{id:"平行光directionallight"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#平行光directionallight"}},[t._v("#")]),t._v(" 平行光DirectionalLight")]),t._v(" "),i("h2",{attrs:{id:"聚光源spotlight"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#聚光源spotlight"}},[t._v("#")]),t._v(" 聚光源SpotLight")]),t._v(" "),i("h2",{attrs:{id:"光照计算算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#光照计算算法"}},[t._v("#")]),t._v(" 光照计算算法")]),t._v(" "),i("p",[t._v("Three.js渲染的时候光照计算还是比较复杂的，这里不进行深入介绍，只给大家说下光源颜色和网格模型Mesh颜色相乘的知识，如果你有兴趣可以学习计算机图形学或者WebGL教程。")]),t._v(" "),i("p",[t._v("Threejs在渲染的时候网格模型材质的颜色值mesh.material.color和光源的颜色值light.color会进行相乘，简单说就是RGB三个分量分别相乘。")]),t._v(" "),i("p",[t._v("平行光漫反射简单数学模型：漫反射光的颜色 = 网格模型材质颜色值 x 光线颜色 x 光线入射角余弦值")]),t._v(" "),i("p",[t._v("漫反射数学模型RGB分量表示：(R2,G2,B2) = (R1,G1,B1) x (R0,G0,B0) x cosθ")]),t._v(" "),i("h2",{attrs:{id:"光照阴影实时计算"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#光照阴影实时计算"}},[t._v("#")]),t._v(" 光照阴影实时计算")])])}),[],!1,null,null,null);a.default=r.exports}}]);