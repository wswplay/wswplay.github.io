import{_ as e,c as r,o,a}from"./app.e0f25733.js";const h=JSON.parse('{"title":"Web Worker简介与用法","description":"","frontmatter":{"title":"Web Worker简介与用法"},"headers":[{"level":2,"title":"Web Worker API","slug":"web-worker-api","link":"#web-worker-api","children":[]}],"relativePath":"basic/tools/worker.md"}'),t={name:"basic/tools/worker.md"},c=a('<h1 id="web-worker" tabindex="-1">Web Worker <a class="header-anchor" href="#web-worker" aria-hidden="true">#</a></h1><p><code>Web Worker</code>为<code>Web内容</code>在<code>后台线程</code>中运行脚本提供了一种简单的方法。<br> 线程可以执行任务(<code>如I/O</code>)，而<code>不干扰用户界面</code>。</p><p>一旦创建，一个 worker 可以将消息发送到<code>创建它的JavaScript</code>代码，通过将消息发布到该代码指定的事件处理器(反之亦然)。</p><h2 id="web-worker-api" tabindex="-1">Web Worker API <a class="header-anchor" href="#web-worker-api" aria-hidden="true">#</a></h2>',4),d=[c];function i(s,_,n,p,k,l){return o(),r("div",null,d)}const w=e(t,[["render",i]]);export{h as __pageData,w as default};
