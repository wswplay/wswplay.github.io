import{_ as n,c as a,o as l,b as p}from"./chunks/framework.DUr976bL.js";const F=JSON.parse('{"title":"Vitepress命令源码分析","description":"","frontmatter":{"title":"Vitepress命令源码分析","outline":"deep"},"headers":[{"level":2,"title":"处理命令行入参","slug":"处理命令行入参","link":"#处理命令行入参","children":[]},{"level":2,"title":"主流程摘要","slug":"主流程摘要","link":"#主流程摘要","children":[{"level":3,"title":"dev-createServer 创建服务","slug":"dev-createserver-创建服务","link":"#dev-createserver-创建服务","children":[]},{"level":3,"title":"build-renderPage","slug":"build-renderpage","link":"#build-renderpage","children":[]}]},{"level":2,"title":"markdown 内容转 vue 插件","slug":"markdown-内容转-vue-插件","link":"#markdown-内容转-vue-插件","children":[]},{"level":2,"title":"辅助信息集锦","slug":"辅助信息集锦","link":"#辅助信息集锦","children":[]}],"relativePath":"vite/press/press-command.md","filePath":"vite/press/press-command.md"}'),e={name:"vite/press/press-command.md"};function o(r,s,c,t,E,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="vitepress-命令源码摘要" tabindex="-1">vitepress 命令源码摘要 <a class="header-anchor" href="#vitepress-命令源码摘要" aria-label="Permalink to &quot;vitepress 命令源码摘要&quot;">​</a></h1><ol><li>调试入口文件：<code>src/node/cli.ts</code>，在目标位置打上断点。</li><li>将 <code>VSCode终端</code> 调至 <code>JavaScript Debug</code> 模式，输如下命令，唤起断点调试。</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#9ECBFF;"> run</span><span style="color:#9ECBFF;"> docs-dev</span></span>
<span class="line"><span style="color:#6A737D;"># &quot;docs-dev&quot;: &quot;wait-on -d 100 dist/node/cli.js &amp;&amp; node ./bin/vitepress dev docs&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="处理命令行入参" tabindex="-1">处理命令行入参 <a class="header-anchor" href="#处理命令行入参" aria-label="Permalink to &quot;处理命令行入参&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> argv</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> minimist</span><span style="color:#E1E4E8;">(process.argv.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// _: [&#39;dev&#39;, &#39;docs&#39;]</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> command</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> argv._[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> root</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> argv._[command </span><span style="color:#F97583;">?</span><span style="color:#79B8FF;"> 1</span><span style="color:#F97583;"> :</span><span style="color:#79B8FF;"> 0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (root) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  argv.root </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> root;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="主流程摘要" tabindex="-1">主流程摘要 <a class="header-anchor" href="#主流程摘要" aria-label="Permalink to &quot;主流程摘要&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">command </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;dev&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#B392F0;"> createDevServer</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> server</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createServer</span><span style="color:#E1E4E8;">(root, argv, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      await</span><span style="color:#E1E4E8;"> server.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">      await</span><span style="color:#B392F0;"> createDevServer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#F97583;">    await</span><span style="color:#E1E4E8;"> server.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#B392F0;">    logVersion</span><span style="color:#E1E4E8;">(server.config.logger);</span></span>
<span class="line"><span style="color:#E1E4E8;">    server.</span><span style="color:#B392F0;">printUrls</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#B392F0;">  createDevServer</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {});</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  logVersion</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;build&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    build</span><span style="color:#E1E4E8;">(root, argv).</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      createLogger</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">c</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">red</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">\`build error:\`</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">\${</span><span style="color:#E1E4E8;">err</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">stack</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      process.</span><span style="color:#B392F0;">exit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#F97583;"> if</span><span style="color:#E1E4E8;"> (command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;serve&quot;</span><span style="color:#F97583;"> ||</span><span style="color:#E1E4E8;"> command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;preview&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    serve</span><span style="color:#E1E4E8;">(argv).</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      createLogger</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">        \`\${</span><span style="color:#E1E4E8;">c</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">red</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">\`failed to start server. error:\`</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">\${</span><span style="color:#E1E4E8;">err</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">stack</span><span style="color:#9ECBFF;">}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">      );</span></span>
<span class="line"><span style="color:#E1E4E8;">      process.</span><span style="color:#B392F0;">exit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#F97583;"> if</span><span style="color:#E1E4E8;"> (command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;init&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#B392F0;">    init</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    createLogger</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(c.</span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`unknown command &quot;\${</span><span style="color:#E1E4E8;">command</span><span style="color:#9ECBFF;">}&quot;.\`</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    process.</span><span style="color:#B392F0;">exit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="dev-createserver-创建服务" tabindex="-1">dev-createServer 创建服务 <a class="header-anchor" href="#dev-createserver-创建服务" aria-label="Permalink to &quot;dev-createServer 创建服务&quot;">​</a></h3><ul><li>实际上，<code>vitepress</code> 最后用到的都是 <code>vite</code> 的 <code>api</code>。</li><li>如 <code>createViteServer</code> 就是 <a href="/vite/command-cli.html#createserver">vite/createServer</a></li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> async</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> createServer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">  root</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> process.</span><span style="color:#B392F0;">cwd</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#FFAB70;">  serverOptions</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ServerOptions</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#B392F0;">  recreateServer</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> config</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveConfig</span><span style="color:#E1E4E8;">(root) {</span></span>
<span class="line"><span style="color:#6A737D;">    // async function resolveConfig(</span></span>
<span class="line"><span style="color:#6A737D;">    //   root: string = process.cwd(),</span></span>
<span class="line"><span style="color:#6A737D;">    //   command: &#39;serve&#39; | &#39;build&#39; = &#39;serve&#39;,</span></span>
<span class="line"><span style="color:#6A737D;">    //   mode = &#39;development&#39;</span></span>
<span class="line"><span style="color:#6A737D;">    // )</span></span>
<span class="line"><span style="color:#6A737D;">    // normalizePath来自vite</span></span>
<span class="line"><span style="color:#E1E4E8;">    root </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> normalizePath</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(root))</span></span>
<span class="line"><span style="color:#6A737D;">    // 解析用户配置</span></span>
<span class="line"><span style="color:#6A737D;">    // const [userConfig, configPath, configDeps] =</span></span>
<span class="line"><span style="color:#E1E4E8;">        await </span><span style="color:#B392F0;">resolveUserConfig</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">          root</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">          command</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">          mode</span></span>
<span class="line"><span style="color:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="color:#6A737D;">          // 加载用户配置</span></span>
<span class="line"><span style="color:#F97583;">          const</span><span style="color:#79B8FF;"> configPath</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> supportedConfigExtensions.</span><span style="color:#B392F0;">flatMap</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">ext</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#B392F0;">            resolve</span><span style="color:#E1E4E8;">(root, </span><span style="color:#9ECBFF;">\`config/index.\${</span><span style="color:#E1E4E8;">ext</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#B392F0;">            resolve</span><span style="color:#E1E4E8;">(root, </span><span style="color:#9ECBFF;">\`config.\${</span><span style="color:#E1E4E8;">ext</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">          ]).</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(fs.pathExistsSync)</span></span>
<span class="line"><span style="color:#F97583;">          let</span><span style="color:#E1E4E8;"> userConfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RawConfigExports</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#F97583;">          let</span><span style="color:#E1E4E8;"> configDeps</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">          if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">configPath) {</span></span>
<span class="line"><span style="color:#B392F0;">            debug</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`no config file found.\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">          } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">            // 获取配置导出信息。loadConfigFromFile来自vite</span></span>
<span class="line"><span style="color:#F97583;">            const</span><span style="color:#79B8FF;"> configExports</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> loadConfigFromFile</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              { command, mode },</span></span>
<span class="line"><span style="color:#E1E4E8;">              configPath,</span></span>
<span class="line"><span style="color:#E1E4E8;">              root</span></span>
<span class="line"><span style="color:#E1E4E8;">            )</span></span>
<span class="line"><span style="color:#6A737D;">            // 分配配置信息和依赖</span></span>
<span class="line"><span style="color:#F97583;">            if</span><span style="color:#E1E4E8;"> (configExports) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              userConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> configExports.config</span></span>
<span class="line"><span style="color:#E1E4E8;">              configDeps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> configExports.dependencies.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">file</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#B392F0;">                normalizePath</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(file))</span></span>
<span class="line"><span style="color:#E1E4E8;">              )</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#F97583;">          return</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> resolveConfigExtends</span><span style="color:#E1E4E8;">(userConfig), configPath, configDeps]</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#6A737D;">    // 解析、格式化站点配置数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    const site </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveSiteData</span><span style="color:#E1E4E8;">(root, userConfig) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      userConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userConfig </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> resolveUserConfig</span><span style="color:#E1E4E8;">(root, command, mode))[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">      return {</span></span>
<span class="line"><span style="color:#B392F0;">        lang</span><span style="color:#E1E4E8;">: userConfig.lang </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;en-US&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        dir</span><span style="color:#E1E4E8;">: userConfig.dir </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;ltr&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        title</span><span style="color:#E1E4E8;">: userConfig.title </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;VitePress&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        titleTemplate</span><span style="color:#E1E4E8;">: userConfig.titleTemplate,</span></span>
<span class="line"><span style="color:#B392F0;">        description</span><span style="color:#E1E4E8;">: userConfig.description </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;A VitePress site&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        base</span><span style="color:#E1E4E8;">: userConfig.base </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> userConfig.base.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(</span><span style="color:#79B8FF;">[</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">/]</span><span style="color:#DBEDFF;">)</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;$1/&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;"> &#39;/&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        head</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">resolveSiteDataHead</span><span style="color:#E1E4E8;">(userConfig),</span></span>
<span class="line"><span style="color:#B392F0;">        appearance</span><span style="color:#E1E4E8;">: userConfig.appearance </span><span style="color:#F97583;">??</span><span style="color:#79B8FF;"> true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        themeConfig</span><span style="color:#E1E4E8;">: userConfig.themeConfig </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#B392F0;">        locales</span><span style="color:#E1E4E8;">: userConfig.locales </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#B392F0;">        scrollOffset</span><span style="color:#E1E4E8;">: userConfig.scrollOffset </span><span style="color:#F97583;">||</span><span style="color:#79B8FF;"> 90</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">        cleanUrls</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">!!</span><span style="color:#E1E4E8;">userConfig.cleanUrls</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    const srcDir </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> normalizePath</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(root, userConfig.srcDir </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> &#39;.&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    const outDir </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    const cacheDir </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> ...</span></span>
<span class="line"><span style="color:#6A737D;">    // 解析主题</span></span>
<span class="line"><span style="color:#E1E4E8;">    const userThemeDir </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> resolve</span><span style="color:#E1E4E8;">(root, </span><span style="color:#9ECBFF;">&#39;theme&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    const themeDir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> fs.</span><span style="color:#B392F0;">pathExists</span><span style="color:#E1E4E8;">(userThemeDir)) </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> userThemeDir </span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> DEFAULT_THEME_PATH</span></span>
<span class="line"><span style="color:#6A737D;">    // 解析页面、路由</span></span>
<span class="line"><span style="color:#E1E4E8;">    const { pages, dynamicRoutes, rewrites } = await </span><span style="color:#B392F0;">resolvePages</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">srcDir</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">userConfig</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> allMarkdownFiles</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> fg</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;**.md&#39;</span><span style="color:#E1E4E8;">], {</span></span>
<span class="line"><span style="color:#E1E4E8;">          cwd: srcDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">          ignore: [</span><span style="color:#9ECBFF;">&#39;**/node_modules&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">(userConfig.srcExclude </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> [])]</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">      ).</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> pages</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> dynamicRouteFiles</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">      allMarkdownFiles.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">file</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        dynamicRouteRE.lastIndex </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#E1E4E8;">        ;(dynamicRouteRE.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(file) </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> dynamicRouteFiles </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> pages).</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(file)</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> dynamicRoutes</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveDynamicRoutes</span><span style="color:#E1E4E8;">(srcDir, dynamicRouteFiles)</span></span>
<span class="line"><span style="color:#E1E4E8;">      pages.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">dynamicRoutes.routes.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> r.path))</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> rewrites</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> resolveRewrites</span><span style="color:#E1E4E8;">(pages, userConfig.rewrites)</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#E1E4E8;"> { pages, dynamicRoutes, rewrites }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    const config: SiteConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      root,</span></span>
<span class="line"><span style="color:#E1E4E8;">      srcDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">      site,</span></span>
<span class="line"><span style="color:#E1E4E8;">      themeDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">      pages,</span></span>
<span class="line"><span style="color:#E1E4E8;">      dynamicRoutes,</span></span>
<span class="line"><span style="color:#F97583;">      ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    global.</span><span style="color:#79B8FF;">VITEPRESS_CONFIG</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> config</span></span>
<span class="line"><span style="color:#E1E4E8;">    return config</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // createViteServer来自vite</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#B392F0;"> createViteServer</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    root: config.srcDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">    base: config.site.base,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cacheDir: config.cacheDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">    plugins: </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> createVitePressPlugin</span><span style="color:#E1E4E8;">(config, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, {}, {}, recreateServer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      const { </span><span style="color:#B392F0;">vue</span><span style="color:#E1E4E8;">: userVuePluginOptions } = siteConfig</span></span>
<span class="line"><span style="color:#E1E4E8;">      let markdownToVue: Awaited</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">ReturnType</span><span style="color:#F97583;">&lt;typeof</span><span style="color:#E1E4E8;"> createMarkdownToVueRenderFn</span><span style="color:#F97583;">&gt;&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      const vuePlugin </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#F97583;"> import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@vitejs/plugin-vue&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        r.</span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">          include: [</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">vue</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;"> /</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">md</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#F97583;">          ...</span><span style="color:#E1E4E8;">userVuePluginOptions</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span></span>
<span class="line"><span style="color:#6A737D;">      // 插件，详见markdown 转 html 插件</span></span>
<span class="line"><span style="color:#E1E4E8;">      const vitePressPlugin: Plugin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        name: </span><span style="color:#9ECBFF;">&#39;vitepress&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#F97583;">        ...</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      return { vitePressPlugin, vuePlugin }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    server: serverOptions,</span></span>
<span class="line"><span style="color:#E1E4E8;">    customLogger: config.logger,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br></div></div><h3 id="build-renderpage" tabindex="-1">build-renderPage <a class="header-anchor" href="#build-renderpage" aria-label="Permalink to &quot;build-renderPage&quot;">​</a></h3><p>最终的 <code>build</code> 来自 vite。【<a href="/vite/command-cli.html#vite-build">vite 的 build</a>】</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> async</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> build</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">  root</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">  buildOptions</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> BuildOptions</span><span style="color:#F97583;"> &amp;</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">base</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">mpa</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  process.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#F97583;"> =</span><span style="color:#9ECBFF;"> &quot;production&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> siteConfig</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveConfig</span><span style="color:#E1E4E8;">(root, </span><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">clientResult</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">serverResult</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">pageToHashMap</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> bundle</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      siteConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">      buildOptions</span></span>
<span class="line"><span style="color:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      const input: Record</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">string, string&gt; = {}</span></span>
<span class="line"><span style="color:#E1E4E8;">      config.pages.forEach((file) =&gt; {</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> alias</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> config.rewrites.map[file] </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> file</span></span>
<span class="line"><span style="color:#E1E4E8;">        input[</span><span style="color:#B392F0;">slash</span><span style="color:#E1E4E8;">(alias).</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\/</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;_&#39;</span><span style="color:#E1E4E8;">)] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(config.srcDir, file)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      const </span><span style="color:#B392F0;">resolveViteConfig</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">ssr</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        root</span><span style="color:#E1E4E8;">: config.srcDir,</span></span>
<span class="line"><span style="color:#B392F0;">        build</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">          rollupOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">            input</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#F97583;">              ...</span><span style="color:#E1E4E8;">input,</span></span>
<span class="line"><span style="color:#B392F0;">              app</span><span style="color:#E1E4E8;">: path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">APP_PATH</span><span style="color:#E1E4E8;">, ssr </span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;"> &#39;ssr.js&#39;</span><span style="color:#F97583;"> :</span><span style="color:#9ECBFF;"> &#39;index.js&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#B392F0;">            output</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#B392F0;">              assetFileNames</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;assets/[name].[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#F97583;">        ...</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      try {</span></span>
<span class="line"><span style="color:#E1E4E8;">        [clientResult, serverResult] </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#6A737D;">          // build来自vite</span></span>
<span class="line"><span style="color:#E1E4E8;">          config.mpa </span><span style="color:#F97583;">?</span><span style="color:#79B8FF;"> null</span><span style="color:#F97583;"> :</span><span style="color:#B392F0;"> build</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> resolveViteConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)),</span></span>
<span class="line"><span style="color:#B392F0;">          build</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> resolveViteConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]) </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> Promise</span><span style="color:#E1E4E8;">&lt;[</span><span style="color:#B392F0;">RollupOutput</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">RollupOutput</span><span style="color:#E1E4E8;">]&gt;)</span></span>
<span class="line"><span style="color:#E1E4E8;">      } catch (e) {}</span></span>
<span class="line"><span style="color:#E1E4E8;">      return { clientResult, serverResult, pageToHashMap }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> entryPath</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(siteConfig.tempDir, </span><span style="color:#9ECBFF;">&#39;app.js&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">render</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> import</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">pathToFileURL</span><span style="color:#E1E4E8;">(entryPath).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> appChunk</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> xxx</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> cssChunk</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (siteConfig.mpa </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> serverResult </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> clientResult).output.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> assets</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (siteConfig.mpa </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> serverResult </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> clientResult).output.</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (isDefaultTheme) {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> hashMapString</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(pageToHashMap))</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> siteDataString</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> xxx</span></span>
<span class="line"><span style="color:#F97583;">      await</span><span style="color:#79B8FF;"> Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;404.md&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">siteConfig.pages]</span></span>
<span class="line"><span style="color:#E1E4E8;">          .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> siteConfig.rewrites.map[page] </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> page)</span></span>
<span class="line"><span style="color:#E1E4E8;">          .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#B392F0;">            renderPage</span><span style="color:#E1E4E8;">(render,siteConfig,page,clientResult,appChunk,</span></span>
<span class="line"><span style="color:#E1E4E8;">              cssChunk,assets,pageToHashMap,hashMapString,</span></span>
<span class="line"><span style="color:#E1E4E8;">              siteDataString,additionalHeadTags</span></span>
<span class="line"><span style="color:#E1E4E8;">            ) {</span></span>
<span class="line"><span style="color:#6A737D;">              // 提取title、head、link等html页面信息</span></span>
<span class="line"><span style="color:#E1E4E8;">              const routePath </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> \`/\${</span><span style="color:#E1E4E8;">page</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">replace</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">md</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#9ECBFF;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">              const siteData </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> resolveSiteDataByRoute</span><span style="color:#E1E4E8;">(config.site, routePath)</span></span>
<span class="line"><span style="color:#E1E4E8;">              const pageName </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> sanitizeFileName</span><span style="color:#E1E4E8;">(page.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\/</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;_&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">              let pageData: PageData</span></span>
<span class="line"><span style="color:#E1E4E8;">              try {</span></span>
<span class="line"><span style="color:#E1E4E8;">                const { __pageData } = await </span><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">                  pathToFileURL</span><span style="color:#E1E4E8;">(path.join(config.tempDir, </span><span style="color:#FFAB70;">pageServerJsFileName</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                )</span></span>
<span class="line"><span style="color:#E1E4E8;">                pageData = __pageData</span></span>
<span class="line"><span style="color:#E1E4E8;">              } </span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;"> (e) {}</span></span>
<span class="line"><span style="color:#E1E4E8;">              const title: string </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createTitle</span><span style="color:#E1E4E8;">(siteData, pageData)</span></span>
<span class="line"><span style="color:#E1E4E8;">              let preloadLinks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> xxx</span></span>
<span class="line"><span style="color:#E1E4E8;">              const head </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> mergeHead</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">              // 构建、填充 html 字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">              const html </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;"> \`&lt;!DOCTYPE html&gt;&lt;html lang=&quot;\${</span><span style="color:#E1E4E8;">siteData</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">lang</span><span style="color:#9ECBFF;">}&quot;xxx&lt;/html&gt;\`</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">trim</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">              const htmlFileName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(config.outDir, page.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">md</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;.html&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#6A737D;">              // 确认目录存在</span></span>
<span class="line"><span style="color:#F97583;">              await</span><span style="color:#E1E4E8;"> fs.</span><span style="color:#B392F0;">ensureDir</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">dirname</span><span style="color:#E1E4E8;">(htmlFileName))</span></span>
<span class="line"><span style="color:#6A737D;">              // 文件写入</span></span>
<span class="line"><span style="color:#F97583;">              await</span><span style="color:#E1E4E8;"> fs.</span><span style="color:#B392F0;">writeFile</span><span style="color:#E1E4E8;">(htmlFileName, transformedHtml </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> html)</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          )</span></span>
<span class="line"><span style="color:#E1E4E8;">      );</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // 删除临时文件目录</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">process.env.</span><span style="color:#79B8FF;">DEBUG</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      fs.</span><span style="color:#B392F0;">rmSync</span><span style="color:#E1E4E8;">(siteConfig.tempDir, { recursive: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, force: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // buildEnd 钩子</span></span>
<span class="line"><span style="color:#F97583;">  await</span><span style="color:#E1E4E8;"> siteConfig.</span><span style="color:#B392F0;">buildEnd</span><span style="color:#E1E4E8;">?.(siteConfig);</span></span>
<span class="line"><span style="color:#E1E4E8;">  siteConfig.logger.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">    \`build complete in \${</span><span style="color:#9ECBFF;">((</span><span style="color:#E1E4E8;">Date</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">now</span><span style="color:#9ECBFF;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start</span><span style="color:#9ECBFF;">) </span><span style="color:#F97583;">/</span><span style="color:#79B8FF;"> 1000</span><span style="color:#9ECBFF;">).</span><span style="color:#B392F0;">toFixed</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}s.\`</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br></div></div><h2 id="markdown-内容转-vue-插件" tabindex="-1">markdown 内容转 vue 插件 <a class="header-anchor" href="#markdown-内容转-vue-插件" aria-label="Permalink to &quot;markdown 内容转 vue 插件&quot;">​</a></h2><p><a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noreferrer">markdown-it</a>插件将 markdown 内容转换成 vue 类型信息。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> vitePressPlugin</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Plugin</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;vitepress&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#F97583;">  async</span><span style="color:#B392F0;"> configResolved</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">resolvedConfig</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    config </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resolvedConfig;</span></span>
<span class="line"><span style="color:#E1E4E8;">    markdownToVue </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createMarkdownToVueRenderFn</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      srcDir,</span></span>
<span class="line"><span style="color:#E1E4E8;">      markdown,</span></span>
<span class="line"><span style="color:#E1E4E8;">      pages,</span></span>
<span class="line"><span style="color:#E1E4E8;">      config.define,</span></span>
<span class="line"><span style="color:#E1E4E8;">      config.command </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;build&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      config.base,</span></span>
<span class="line"><span style="color:#E1E4E8;">      lastUpdated,</span></span>
<span class="line"><span style="color:#E1E4E8;">      cleanUrls,</span></span>
<span class="line"><span style="color:#E1E4E8;">      siteConfig</span></span>
<span class="line"><span style="color:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#79B8FF;"> md</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> createMarkdownRenderer</span><span style="color:#E1E4E8;">(srcDir,options,base,siteConfig?.logger) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        const theme </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.theme </span><span style="color:#F97583;">??</span><span style="color:#9ECBFF;"> &#39;material-theme-palenight&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        const md </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> MarkdownIt</span><span style="color:#E1E4E8;">({ html: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, linkify: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">        md.linkify.set({ </span><span style="color:#B392F0;">fuzzyLink</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">        md.use(xxxPlugin).use(xxxPlugin)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      pages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pages.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> slash</span><span style="color:#E1E4E8;">(p.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">md</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)))</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#F97583;"> async</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#FFAB70;">        src</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">        file</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">        publicDir</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">MarkdownCompileResult</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> fileOrig</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> file</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> html</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> md.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(src, env)</span></span>
<span class="line"><span style="color:#F97583;">        const</span><span style="color:#79B8FF;"> result</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#F97583;">  async</span><span style="color:#B392F0;"> transform</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">    if</span><span style="color:#E1E4E8;"> (id.</span><span style="color:#B392F0;">endsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.vue&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#B392F0;"> processClientJS</span><span style="color:#E1E4E8;">(code, id)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#F97583;"> if</span><span style="color:#E1E4E8;"> (id.</span><span style="color:#B392F0;">endsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.md&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#6A737D;">      // transform .md files into vueSrc so plugin-vue can handle it</span></span>
<span class="line"><span style="color:#F97583;">      const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">vueSrc</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">deadLinks</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">includes</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> markdownToVue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        code, id, config.publicDir )</span></span>
<span class="line"><span style="color:#E1E4E8;">      allDeadLinks.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">deadLinks)</span></span>
<span class="line"><span style="color:#F97583;">      if</span><span style="color:#E1E4E8;"> (includes.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        includes.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">          this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addWatchFile</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#F97583;">      return</span><span style="color:#B392F0;"> processClientJS</span><span style="color:#E1E4E8;">(vueSrc, id)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="辅助信息集锦" tabindex="-1">辅助信息集锦 <a class="header-anchor" href="#辅助信息集锦" aria-label="Permalink to &quot;辅助信息集锦&quot;">​</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">async</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> resolveConfigExtends</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">  config</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RawConfigExports</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">UserConfig</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#F97583;">  const</span><span style="color:#79B8FF;"> resolved</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> config </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &quot;function&quot;</span><span style="color:#F97583;"> ?</span><span style="color:#B392F0;"> config</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> config);</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (resolved.extends) {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> base</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveConfigExtends</span><span style="color:#E1E4E8;">(resolved.extends);</span></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#B392F0;"> mergeConfig</span><span style="color:#E1E4E8;">(base, resolved);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#F97583;">  return</span><span style="color:#E1E4E8;"> resolved;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,18)]))}const b=n(e,[["render",o]]);export{F as __pageData,b as default};
