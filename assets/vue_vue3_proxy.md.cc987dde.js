import{_ as s,c as a,o as n,a as e}from"./app.ac9210da.js";const d=JSON.parse('{"title":"介绍Proxy基本使用及Vue中使用","description":"","frontmatter":{"title":"介绍Proxy基本使用及Vue中使用"},"headers":[{"level":2,"title":"转发","slug":"转发","link":"#转发","children":[]}],"relativePath":"vue/vue3/proxy.md"}'),l={name:"vue/vue3/proxy.md"},o=e(`<h1 id="proxy-代理" tabindex="-1">Proxy 代理 <a class="header-anchor" href="#proxy-代理" aria-hidden="true">#</a></h1><p><code>Proxy</code> 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义(如属性查找、赋值、枚举、函数调用等)。</p><blockquote><p>可用于<strong>转发</strong></p></blockquote><h2 id="转发" tabindex="-1">转发 <a class="header-anchor" href="#转发" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> target </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Proxy</span><span style="color:#A6ACCD;">(target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">37</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 操作转发到目标</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 37. 操作已经被正确地转发</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,5),p=[o];function t(r,c,i,y,D,A){return n(),a("div",null,p)}const F=s(l,[["render",t]]);export{d as __pageData,F as default};
