import{_ as e,c as r,o as t,a as n}from"./app.de31c74d.js";const u=JSON.parse('{"title":"概览","description":"","frontmatter":{"title":"概览","outline":"deep"},"headers":[{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"监督学习","slug":"监督学习","link":"#监督学习","children":[{"level":3,"title":"回归问题","slug":"回归问题","link":"#回归问题","children":[]},{"level":3,"title":"分类问题","slug":"分类问题","link":"#分类问题","children":[]}]},{"level":2,"title":"人工智能","slug":"人工智能","link":"#人工智能","children":[]}],"relativePath":"aiart/deep-learning/overview.md"}'),a={name:"aiart/deep-learning/overview.md"},s=n('<h1 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-hidden="true">#</a></h1><p><strong>深度学习</strong>(deep learning)与经典方法主要区别：前者关注功能强大模型，这些模型由<strong>神经网络</strong>错综复杂的交织在一起，包含层层数据转换，因此被称为深度学习。</p><p>大约 2010 年开始，<strong>神经网络算法</strong>变得热门起来，原因有 2 点：</p><ul><li>1、随着互联网的公司的出现，为数亿在线用户提供服务，大规模<strong>数据</strong>集变得触手可及。</li><li>2、廉价又高质量的传感器、廉价的数据存储（克莱德定律）以及廉价计算（摩尔定律）的普及，特别是 <strong>GPU</strong> 的普及，使大规模算力唾手可得。</li></ul><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-hidden="true">#</a></h2><p>与传统机器学习方法相比，<strong>深度学习</strong>的一个主要优势是可以<strong>处理不同长度</strong>的数据。</p><p>深度学习方法中最显著的共同点是使用<strong>端到端</strong>训练。也就是说，与其基于单独调整的组件组装系统，不如构建系统，然后联合调整它们的性能。</p><p>除了端到端的训练，人们正在经历从参数统计描述到<strong>完全非参数模型</strong>的转变。</p><p>深度学习不仅取代了传统机器学习的<strong>浅层模型</strong>，而且取代了劳动密集型的<strong>特征工程</strong>。</p><h2 id="监督学习" tabindex="-1">监督学习 <a class="header-anchor" href="#监督学习" aria-hidden="true">#</a></h2><p>回归是训练一个回归函数来<strong>输出一个数值</strong>；分类是训练一个分类器来<strong>输出预测的类别</strong>。</p><h3 id="回归问题" tabindex="-1">回归问题 <a class="header-anchor" href="#回归问题" aria-hidden="true">#</a></h3><p>当标签取任意数值时，我们称之为回归问题。任何有关<code>有多少</code>的问题很可能就是回归问题。</p><p><strong>损失函数</strong>通常是<strong>平方误差</strong>(<code>squared error</code>)的最小化。</p><h3 id="分类问题" tabindex="-1">分类问题 <a class="header-anchor" href="#分类问题" aria-hidden="true">#</a></h3><p>这种“哪一个”的问题叫做分类（classification）问题。 分类问题希望模型能够预测样本属于哪个类别（category，正式称为类（class））。</p><p><strong>请注意，最常见的类别不一定是最终用于决策的类别</strong>。</p><p><strong>损失函数</strong>被称为<strong>交叉熵</strong>（<code>cross-entropy</code>）。</p><h2 id="人工智能" tabindex="-1">人工智能 <a class="header-anchor" href="#人工智能" aria-hidden="true">#</a></h2><p>我们离一个能够控制人类创造者的有知觉的人工智能系统还很远。</p><ul><li>首先，人工智能系统是以一种特定的、面向目标的方式设计、训练和部署的。 虽然他们的行为可能会给人一种通用智能的错觉，但设计的基础是规则、启发式和统计模型的结合。</li><li>其次，目前还不存在能够自我改进、自我推理、能够在试图解决一般任务的同时，修改、扩展和改进自己的架构的“人工通用智能”工具。</li></ul>',21),o=[s];function i(l,d,c,g,h,p){return t(),r("div",null,o)}const f=e(a,[["render",i]]);export{u as __pageData,f as default};
