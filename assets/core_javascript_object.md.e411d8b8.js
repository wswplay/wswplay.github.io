import{_ as s,c as a,o as n,a as e}from"./app.c793d8aa.js";const F=JSON.parse('{"title":"Object 对象","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":"：","6":"O","7":"b","8":"j","9":"e","10":"c","11":"t","12":" ","13":"对","14":"象"},"headers":[{"level":2,"title":"Object.entries()","slug":"object-entries","link":"#object-entries","children":[]}],"relativePath":"core/javascript/object.md"}'),o={name:"core/javascript/object.md"},t=e(`<h1 id="object-对象" tabindex="-1">Object 对象 <a class="header-anchor" href="#object-对象" aria-hidden="true">#</a></h1><h2 id="object-entries" tabindex="-1">Object.entries() <a class="header-anchor" href="#object-entries" aria-hidden="true">#</a></h2><p><code>Object.entries()</code> 方法返回一个给定对象自身可枚举属性的键值对数组，其排列与使用 <code>for...in</code> 循环遍历该对象时返回的顺序一致。</p><p>区别在于 <code>for-in</code> 循环还会枚举<strong>原型链中属性</strong>。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">66</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">99</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [ [ &#39;0&#39;, 11 ], [ &#39;1&#39;, 66 ], [ &#39;2&#39;, 99 ] ]</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">666</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">三体</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [ [ &#39;id&#39;, 666 ], [ &#39;name&#39;, &#39;三体&#39; ] ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,5),l=[t];function p(c,r,i,d,D,y){return n(),a("div",null,l)}const A=s(o,[["render",p]]);export{F as __pageData,A as default};
