import{_ as n,c as a,o as l,b as p}from"./chunks/framework.DUr976bL.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"build谱系函数集锦","slug":"build谱系函数集锦","link":"#build谱系函数集锦","children":[]}],"relativePath":"vite/extend/rollup-source-build.md","filePath":"vite/extend/rollup-source-build.md"}'),e={name:"vite/extend/rollup-source-build.md"};function o(r,s,c,t,E,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h3 id="build谱系函数集锦" tabindex="-1">build谱系函数集锦 <a class="header-anchor" href="#build谱系函数集锦" aria-label="Permalink to &quot;build谱系函数集锦&quot;">​</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">runRollup</span><span style="color:#E1E4E8;">(command)</span></span>
<span class="line"><span style="color:#B392F0;">  getConfigs</span><span style="color:#E1E4E8;">(command)</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> configFile</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getConfigPath</span><span style="color:#E1E4E8;">(command.config)</span></span>
<span class="line"><span style="color:#6A737D;">    // 加载配置文件</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">warnings</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> loadConfigFile</span><span style="color:#E1E4E8;">(configFile, command)</span></span>
<span class="line"><span style="color:#B392F0;">      getConfigList</span><span style="color:#E1E4E8;">(fileName, commandOptions)</span></span>
<span class="line"><span style="color:#B392F0;">        getConfigFileExport</span><span style="color:#E1E4E8;">(fileName, commandOptions)</span></span>
<span class="line"><span style="color:#B392F0;">          loadTranspiledConfigFile</span><span style="color:#E1E4E8;">(fileName, commandOptions)</span></span>
<span class="line"><span style="color:#F97583;">            const</span><span style="color:#79B8FF;"> inputOptions</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">, plugins: [] }</span></span>
<span class="line"><span style="color:#B392F0;">            addPluginsFromCommandOption</span><span style="color:#E1E4E8;">(configPlugin, inputOptions)</span></span>
<span class="line"><span style="color:#6A737D;">            // 解析配置文件</span></span>
<span class="line"><span style="color:#F97583;">            const</span><span style="color:#79B8FF;"> bundle</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> rollup.</span><span style="color:#B392F0;">rollup</span><span style="color:#E1E4E8;">(inputOptions) {</span></span>
<span class="line"><span style="color:#B392F0;">              rollupInternal</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">rawInputOptions</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">                // 获取配置文件入口配置</span></span>
<span class="line"><span style="color:#F97583;">                const</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">inputOptions</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> getInputOptions</span><span style="color:#E1E4E8;">(rawInputOptions) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  const rawPlugins </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getSortedValidatedPlugins</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;options&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                  const { options } = await </span><span style="color:#B392F0;">normalizeInputOptions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                    rawPlugins.reduce(..., </span><span style="color:#FFAB70;">rawInputOptions</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#F97583;">                    const</span><span style="color:#79B8FF;"> options</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">, input: </span><span style="color:#B392F0;">getInput</span><span style="color:#E1E4E8;">(config)}</span></span>
<span class="line"><span style="color:#F97583;">                    return</span><span style="color:#E1E4E8;"> { options }</span></span>
<span class="line"><span style="color:#E1E4E8;">                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                  return { options }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#6A737D;">                // 创建图谱实例</span></span>
<span class="line"><span style="color:#F97583;">                const</span><span style="color:#79B8FF;"> graph</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Graph</span><span style="color:#E1E4E8;">(inputOptions, watcher) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  readonly modulesById </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Map</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                  this.pluginDriver </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> PluginDriver</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, options, options.plugins)</span></span>
<span class="line"><span style="color:#E1E4E8;">                  this.moduleLoader </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ModuleLoader</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.modulesById)</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#6A737D;">                // 进入核心构建流程</span></span>
<span class="line"><span style="color:#F97583;">                await</span><span style="color:#B392F0;"> catchUnfinishedHookActions</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                  try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">                    await</span><span style="color:#E1E4E8;"> graph.pluginDriver.</span><span style="color:#B392F0;">hookParallel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;buildStart&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">                    // 构建</span></span>
<span class="line"><span style="color:#F97583;">                    await</span><span style="color:#E1E4E8;"> graph.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">                      // 深度优先递归解析模块内容、依赖等信息，生成关系图谱</span></span>
<span class="line"><span style="color:#F97583;">                      await</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">generateModuleGraph</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                        await</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.moduleLoader.</span><span style="color:#B392F0;">addEntryModules</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#B392F0;">                            normalizeEntryModules</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.options.input),</span></span>
<span class="line"><span style="color:#79B8FF;">                            true</span></span>
<span class="line"><span style="color:#E1E4E8;">                          ) {</span></span>
<span class="line"><span style="color:#F97583;">                          const</span><span style="color:#79B8FF;"> newEntryModules</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">extendLoadModulesPromise</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            Promise.all(</span></span>
<span class="line"><span style="color:#E1E4E8;">                              unresolvedEntryModules.map(({ id, importer }) =&gt; {</span></span>
<span class="line"><span style="color:#79B8FF;">                                this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">loadEntryModule</span><span style="color:#E1E4E8;">(id) {</span></span>
<span class="line"><span style="color:#F97583;">                                  const</span><span style="color:#79B8FF;"> resolveIdResult</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveId</span><span style="color:#E1E4E8;">(unresolvedId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    const pluginResult </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#B392F0;"> resolveIdViaPlugins</span><span style="color:#E1E4E8;">(source) {</span></span>
<span class="line"><span style="color:#6A737D;">                                      // return pluginDriver.hookFirstAndGetPlugin(&#39;resolveId&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    return </span><span style="color:#B392F0;">addJsExtensionIfNecessary</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">source</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  }</span></span>
<span class="line"><span style="color:#F97583;">                                  return</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">fetchModule</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getResolvedIdWithDefaults</span><span style="color:#E1E4E8;">(id)) {</span></span>
<span class="line"><span style="color:#6A737D;">                                    // 创建模块实例</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    const </span><span style="color:#79B8FF;">module</span><span style="color:#F97583;"> =</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Module</span><span style="color:#E1E4E8;">(id, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    this.modulesById.set(id, module)</span></span>
<span class="line"><span style="color:#6A737D;">                                    // 添加模块源信息</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    const loadPromise </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addModuleSource</span><span style="color:#E1E4E8;">(id, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      try {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                        source </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.pluginDriver.</span><span style="color:#B392F0;">hookFirst</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;load&#39;</span><span style="color:#E1E4E8;">, [id])</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      }</span></span>
<span class="line"><span style="color:#6A737D;">                                      // 更新模块相关信息</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      module.updateOptions(sourceDescription)</span></span>
<span class="line"><span style="color:#6A737D;">                                      // 设置模块相关信息</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      module.setSource(</span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                        code </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> await</span><span style="color:#E1E4E8;"> pluginDriver.</span><span style="color:#B392F0;">hookReduceArg0</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;transform&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">                                        return</span><span style="color:#E1E4E8;"> { code, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      }) {</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.info.code </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> code</span></span>
<span class="line"><span style="color:#F97583;">                                        const</span><span style="color:#79B8FF;"> moduleAst</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> ast </span><span style="color:#F97583;">??</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tryParse</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.astContext </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {code, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.scope </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ModuleScope</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.namespace </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> NamespaceVariable</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.ast </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> Program</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#79B8FF;">                                        this</span><span style="color:#E1E4E8;">.info.ast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> moduleAst;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    }.</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">                                      this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getResolveStaticDependencyPromises</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#79B8FF;">                                      this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getResolveDynamicImportPromises</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      loadAndResolveDependenciesPromise</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    })</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    this.pluginDriver.hookParallel(</span><span style="color:#9ECBFF;">&#39;moduleParsed&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    const resolveDependencyPromises = await loadPromise;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    await this.fetchModuleDependencies(module, ...resolveDependencyPromises)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    return module;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            ).then(entryModules =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">                              for (const [index, entryModule] of entryModules.entries()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                addChunkNamesToModule(entryModule)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                this.indexedEntryModules.push({index: xxx, module: entryModule})</span></span>
<span class="line"><span style="color:#79B8FF;">                                this</span><span style="color:#E1E4E8;">.indexedEntryModules.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(({</span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">indexA</span><span style="color:#E1E4E8;">}, {</span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">indexB</span><span style="color:#E1E4E8;">}) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  indexA </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> indexB </span><span style="color:#F97583;">?</span><span style="color:#79B8FF;"> 1</span><span style="color:#F97583;"> :</span><span style="color:#F97583;"> -</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">                                })</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#F97583;">                              return</span><span style="color:#E1E4E8;"> entryModules;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            })</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#F97583;">                          await</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">awaitLoadModulesPromise</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">                          return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            entryModules: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.indexedEntryModules.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> module</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">                            newEntryModules</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#6A737D;">                        // 标记内部、外部模块</span></span>
<span class="line"><span style="color:#F97583;">                        for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> module</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.modulesById.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#F97583;">                          if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">module</span><span style="color:#F97583;"> instanceof</span><span style="color:#B392F0;"> Module</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#79B8FF;">                            this</span><span style="color:#E1E4E8;">.modules.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                          } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">                            this</span><span style="color:#E1E4E8;">.externalModules.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#E1E4E8;">                      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">                      // 按模块及依赖执行先后排序，ast按照各自类型绑定引用</span></span>
<span class="line"><span style="color:#79B8FF;">                      this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sortModules</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">                        // 排序：递归分析模块，并标记执行顺序，返回排序后的模块数组</span></span>
<span class="line"><span style="color:#F97583;">                        const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">orderedModules</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">cyclePaths</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> analyseModuleExecution</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.entryModules) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                          const </span><span style="color:#B392F0;">analyseModule</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">                            if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">module</span><span style="color:#F97583;"> instanceof</span><span style="color:#B392F0;"> Module</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">                              for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> dependency</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> module</span><span style="color:#E1E4E8;">.dependencies) {</span></span>
<span class="line"><span style="color:#B392F0;">                                analyseModule</span><span style="color:#E1E4E8;">(dependency);</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#79B8FF;">                            module</span><span style="color:#E1E4E8;">.execIndex </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> nextExecIndex</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            analysedModules.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                          return { cyclePaths, orderedModules };</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#79B8FF;">                        this</span><span style="color:#E1E4E8;">.modules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> orderedModules;</span></span>
<span class="line"><span style="color:#6A737D;">                        // ast绑定引用</span></span>
<span class="line"><span style="color:#F97583;">                        for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> module</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.modules) {</span></span>
<span class="line"><span style="color:#79B8FF;">                          module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">bindReferences</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#79B8FF;">                            this</span><span style="color:#E1E4E8;">.ast</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                              for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> key</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.keys) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                child?.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#E1E4E8;">                      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">                      // 运行node.hasEffects()，标记ast属性included是否含true，决定该节点是否入包</span></span>
<span class="line"><span style="color:#79B8FF;">                      this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">includeStatements</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                        for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> module</span><span style="color:#F97583;"> of</span><span style="color:#E1E4E8;"> entryModules) {</span></span>
<span class="line"><span style="color:#B392F0;">                          markModuleAndImpureDependenciesAsExecuted</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">) { </span></span>
<span class="line"><span style="color:#E1E4E8;">                            baseModule.isExecuted </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#F97583;">                        for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> module</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.modules) {</span></span>
<span class="line"><span style="color:#F97583;">                          if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.info.moduleSideEffects </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> &#39;no-treeshake&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#79B8FF;">                            module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">includeAllInBundle</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#79B8FF;">                              this</span><span style="color:#E1E4E8;">.ast</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">createInclusionContext</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">                                // Program.ts</span></span>
<span class="line"><span style="color:#B392F0;">                                include</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#79B8FF;">                                  this</span><span style="color:#E1E4E8;">.included </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;"> true</span></span>
<span class="line"><span style="color:#F97583;">                                  for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> node</span><span style="color:#F97583;"> of</span><span style="color:#79B8FF;"> this</span><span style="color:#E1E4E8;">.body) {</span></span>
<span class="line"><span style="color:#F97583;">                                    if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">) node.</span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">(context, includeChildrenRecursively)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#79B8FF;">                              this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">includeAllExports</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">                              module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                                const</span><span style="color:#79B8FF;"> context</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> createInclusionContext</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">                                if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ast</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">shouldBeIncluded</span><span style="color:#E1E4E8;">(context) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  return this.included || (!context.brokenFlow &amp;&amp; this.hasEffects(</span><span style="color:#B392F0;">createHasEffectsContext</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">                                }) {</span></span>
<span class="line"><span style="color:#79B8FF;">                                  this</span><span style="color:#E1E4E8;">.ast</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">(context, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                              }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                          }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#E1E4E8;">                      }</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#6A737D;">                    // 执行 buildEnd 钩子</span></span>
<span class="line"><span style="color:#F97583;">                    await</span><span style="color:#E1E4E8;"> graph.pluginDriver.</span><span style="color:#B392F0;">hookParallel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;buildEnd&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#F97583;">                const</span><span style="color:#79B8FF;"> result</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">                  // 只生成。不写入</span></span>
<span class="line"><span style="color:#F97583;">                  async</span><span style="color:#B392F0;"> generate</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">                    return</span><span style="color:#B392F0;"> handleGenerateWrite</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#F97583;">                return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">              }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br></div></div>`,2)]))}const u=n(e,[["render",o]]);export{F as __pageData,u as default};
