import{_ as i,c as a,o as l,b as n}from"./chunks/framework._eNwL97Z.js";const d=JSON.parse('{"title":"Nodejs-url模块及扩展介绍与使用","description":"","frontmatter":{"title":"Nodejs-url模块及扩展介绍与使用"},"headers":[{"level":2,"title":"url 模块","slug":"url-模块","link":"#url-模块","children":[{"level":3,"title":"url.fileURLToPath(url)","slug":"url-fileurltopath-url","link":"#url-fileurltopath-url","children":[]}]}],"relativePath":"node/core/url.md","filePath":"node/core/url.md"}'),e={name:"node/core/url.md"};function t(r,s,h,p,k,u){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="url-模块及扩展" tabindex="-1">url 模块及扩展 <a class="header-anchor" href="#url-模块及扩展" aria-label="Permalink to &quot;url 模块及扩展&quot;">​</a></h1><h2 id="url-模块" tabindex="-1">url 模块 <a class="header-anchor" href="#url-模块" aria-label="Permalink to &quot;url 模块&quot;">​</a></h2><h3 id="url-fileurltopath-url" tabindex="-1">url.fileURLToPath(url) <a class="header-anchor" href="#url-fileurltopath-url" aria-label="Permalink to &quot;url.fileURLToPath(url)&quot;">​</a></h3><p>此函数可确保正确解码百分比编码字符，并确保跨平台有效的绝对路径字符串。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { fileURLToPath } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileURLToPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file:///C:/path/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).pathname; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 错误: /C:/path/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fileURLToPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file:///C:/path/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 正确: C:\\path\\ (Windows)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5)]))}const c=i(e,[["render",t]]);export{d as __pageData,c as default};
