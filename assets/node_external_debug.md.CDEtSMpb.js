import{_ as e,c as n,o as a,b as o}from"./chunks/framework._eNwL97Z.js";const t="/assets/node_flag.CLspGn9d.png",r="/assets/inspect.OqtVfMsY.png",l="/assets/json_list.BU14P4iD.png",m=JSON.parse('{"title":"本地怎么调试nodejs项目文件(浏览器)","description":"","frontmatter":{"title":"本地怎么调试nodejs项目文件(浏览器)","outline":"deep"},"headers":[{"level":2,"title":"本地调试 Nodejs(浏览器)","slug":"本地调试-nodejs-浏览器","link":"#本地调试-nodejs-浏览器","children":[{"level":3,"title":"--inspect-brk","slug":"inspect-brk","link":"#inspect-brk","children":[]},{"level":3,"title":"Vitepress 的 debug 命令","slug":"vitepress-的-debug-命令","link":"#vitepress-的-debug-命令","children":[]}]}],"relativePath":"node/external/debug.md","filePath":"node/external/debug.md"}'),p={name:"node/external/debug.md"};function i(c,s,d,b,u,g){return a(),n("div",null,s[0]||(s[0]=[o(`<h1 id="more-debugging-less-bugs。" tabindex="-1">More Debugging，Less Bugs。 <a class="header-anchor" href="#more-debugging-less-bugs。" aria-label="Permalink to &quot;More Debugging，Less Bugs。&quot;">​</a></h1><p><strong>调试</strong>，是开发、学习、借鉴的第一步。<br> 是前进的阶梯，是更上一层楼的敲门砖。——鲁迅没说过这话😆</p><h2 id="本地调试-nodejs-浏览器" tabindex="-1">本地调试 Nodejs(浏览器) <a class="header-anchor" href="#本地调试-nodejs-浏览器" aria-label="Permalink to &quot;本地调试 Nodejs(浏览器)&quot;">​</a></h2><h3 id="inspect-brk" tabindex="-1">--inspect-brk <a class="header-anchor" href="#inspect-brk" aria-label="Permalink to &quot;--inspect-brk&quot;">​</a></h3><p><strong>1. 使用 --inspect-brk=host:port 标志启动远端服务器内的 inspector 调试器</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">node</span><span style="color:#79B8FF;"> --inspect-brk</span><span style="color:#9ECBFF;"> xxx.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令行，会出现如下信息</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#B392F0;">Debugger</span><span style="color:#9ECBFF;"> listening</span><span style="color:#9ECBFF;"> on</span><span style="color:#9ECBFF;"> ws://127.0.0.1:9229/a06e74fe-603d-4c6c-8609-4a4128968ed9</span></span>
<span class="line"><span style="color:#B392F0;">For</span><span style="color:#9ECBFF;"> help,</span><span style="color:#9ECBFF;"> see:</span><span style="color:#9ECBFF;"> https://nodejs.org/en/docs/inspector</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这是启用了 V8 检查器，启动了一个 ws 服务，默认端口 9229，加一个动态生成的 UUID, 这时需要一个可以连接该服务的调试客户端。打开 chrome 的开发者工具页面，如果看到 node 的绿色图标，点击就可进入调试。<br><img src="`+t+'" alt="An image"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果没有，在 chrome 的地址栏输入 <code>chrome://inspect/#devices</code><br> 可以看到如下图所示，Remote Target 中会有你启动调试的文件，点击 inspect</p></div><p><img src="'+r+'" alt="An image"></p><p>如果是自定义端口，则点击上图中<code>Discover network targets</code>右侧按钮，添加上你的端口即可。</p><p><strong>或者用另外一种方式打开调试界面</strong><br><strong>2. 在本地访问 <code>http://[host:port]/json/list</code> 得到 <code>devtoolsFrontendUrl</code>。</strong><br><strong>3. 本地访问 <code>devtoolsFrontendUrl</code> 得到调试界面。</strong></p><p><img src="'+l+`" alt="An image"></p><h3 id="vitepress-的-debug-命令" tabindex="-1">Vitepress 的 debug 命令 <a class="header-anchor" href="#vitepress-的-debug-命令" aria-label="Permalink to &quot;Vitepress 的 debug 命令&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;docs-debug&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;node --inspect-brk ./bin/vitepress dev docs&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,16)]))}const v=e(p,[["render",i]]);export{m as __pageData,v as default};
