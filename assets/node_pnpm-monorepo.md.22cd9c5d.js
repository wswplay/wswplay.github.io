import{_ as s,c as a,o as n,a as e}from"./app.0e12bc11.js";const b=JSON.parse('{"title":"pnpm和monorepo介绍与使用方法","description":"","frontmatter":{"title":"pnpm和monorepo介绍与使用方法"},"headers":[{"level":2,"title":"安装 pnpm","slug":"安装-pnpm","link":"#安装-pnpm","children":[]},{"level":2,"title":"pnpm 命令","slug":"pnpm-命令","link":"#pnpm-命令","children":[{"level":3,"title":"-w, --workspace-root","slug":"w-workspace-root","link":"#w-workspace-root","children":[]},{"level":3,"title":"--recursive, -r","slug":"recursive-r","link":"#recursive-r","children":[]},{"level":3,"title":"--save-dev, -D","slug":"save-dev-d","link":"#save-dev-d","children":[]},{"level":3,"title":"--save-prod, -P","slug":"save-prod-p","link":"#save-prod-p","children":[]},{"level":3,"title":"--filter <package_selector>","slug":"filter-package-selector","link":"#filter-package-selector","children":[]}]},{"level":2,"title":"创建 monorepo 项目","slug":"创建-monorepo-项目","link":"#创建-monorepo-项目","children":[]}],"relativePath":"node/pnpm-monorepo.md"}'),p={name:"node/pnpm-monorepo.md"},l=e(`<h1 id="pnpm和monorepo介绍与使用" tabindex="-1">pnpm和monorepo介绍与使用 <a class="header-anchor" href="#pnpm和monorepo介绍与使用" aria-hidden="true">#</a></h1><h2 id="安装-pnpm" tabindex="-1">安装 pnpm <a class="header-anchor" href="#安装-pnpm" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看版本</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="pnpm-命令" tabindex="-1">pnpm 命令 <a class="header-anchor" href="#pnpm-命令" aria-hidden="true">#</a></h2><h3 id="w-workspace-root" tabindex="-1">-w, --workspace-root <a class="header-anchor" href="#w-workspace-root" aria-hidden="true">#</a></h3><p>将 workspace 的根目录作为 pnpm 的运行目录，而不是 当前目录</p><h3 id="recursive-r" tabindex="-1">--recursive, -r <a class="header-anchor" href="#recursive-r" aria-hidden="true">#</a></h3><p>当在 workspace 下使用时，将从 workspace 下的每个软件包中删除指定的一个或多个依赖包。<br> 当不在 workspace 下使用时，将在 子目录下寻找所有软件包并删除指定的一个或多个依赖包。</p><h3 id="save-dev-d" tabindex="-1">--save-dev, -D <a class="header-anchor" href="#save-dev-d" aria-hidden="true">#</a></h3><p>devDependencies 中列出的依赖包</p><h3 id="save-prod-p" tabindex="-1">--save-prod, -P <a class="header-anchor" href="#save-prod-p" aria-hidden="true">#</a></h3><p>dependencies 中列出的依赖包</p><h3 id="filter-package-selector" tabindex="-1">--filter &lt;package_selector&gt; <a class="header-anchor" href="#filter-package-selector" aria-hidden="true">#</a></h3><p>过滤和选择</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 项目全局安装依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-W</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装局部依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">axios</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@xiao/vue</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="创建-monorepo-项目" tabindex="-1">创建 monorepo 项目 <a class="header-anchor" href="#创建-monorepo-项目" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置 workspace</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建pnpm-workspace.yaml文件，并写入以下内容</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 意思就是通过 glob 语法将packages下的所有文件夹都当做一个package，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 添加到 monorepo 中进行管理</span></span>
<span class="line"><span style="color:#FFCB6B;">packages:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">packages/**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 注意中间有空格</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 创建packages目录，并在里面创建你的库文件夹</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages</span></span>
<span class="line"><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 用pnpm init给packages中的每个子库创建package.json文件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 注意子库package.json name字段名字，是通过这个来安装局部依赖的</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Done!</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,17),o=[l];function r(c,t,i,d,m,h){return n(),a("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
