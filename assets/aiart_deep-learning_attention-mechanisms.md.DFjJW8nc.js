import{_ as n,c as e,o as r,b as o}from"./chunks/framework._eNwL97Z.js";const p=JSON.parse('{"title":"注意力机制","description":"","frontmatter":{"title":"注意力机制","outline":"deep"},"headers":[{"level":2,"title":"查询、键和值","slug":"查询、键和值","link":"#查询、键和值","children":[]},{"level":2,"title":"注意力机制","slug":"注意力机制","link":"#注意力机制","children":[]}],"relativePath":"aiart/deep-learning/attention-mechanisms.md","filePath":"aiart/deep-learning/attention-mechanisms.md"}'),a={name:"aiart/deep-learning/attention-mechanisms.md"};function s(d,t,i,g,l,h){return r(),e("div",null,t[0]||(t[0]=[o('<h1 id="注意力机制-attention-mechanisms" tabindex="-1">注意力机制(attention mechanisms) <a class="header-anchor" href="#注意力机制-attention-mechanisms" aria-label="Permalink to &quot;注意力机制(attention mechanisms)&quot;">​</a></h1><h2 id="查询、键和值" tabindex="-1">查询、键和值 <a class="header-anchor" href="#查询、键和值" aria-label="Permalink to &quot;查询、键和值&quot;">​</a></h2><p>在注意力机制的背景下，<strong>自主性提示</strong>被称为<strong>查询（query）</strong>。</p><p>给定任何查询，注意力机制通过注意力汇聚（<code>attention pooling</code>） 将选择引导至感官输入（<code>sensory inputs</code>，例如中间特征表示）。这些感官输入被称为<strong>值（value）</strong>。</p><p>每个<strong>值</strong>都与一个<strong>键</strong>（<code>key</code>）配对，这可以想象为感官输入的<strong>非自主提示</strong>。</p><h2 id="注意力机制" tabindex="-1">注意力机制 <a class="header-anchor" href="#注意力机制" aria-label="Permalink to &quot;注意力机制&quot;">​</a></h2><p>通过<strong>注意力汇聚</strong>将<strong>查询</strong>（自主性提示）和<strong>键</strong>（非自主性提示）结合在一起，实现对<strong>值</strong>（感官输入）的<strong>选择</strong>倾向（智能选择）。</p><p>“查询-键”对<strong>越近</strong>，注意力汇聚<strong>注意力权重</strong>就越高。</p><p>“是否包含自主性提示”将<strong>注意力机制</strong>与<strong>全连接层或汇聚层</strong>区别开来。</p><table tabindex="0"><thead><tr><th>特性</th><th>注意力机制</th><th>全连接层</th><th>汇聚层</th></tr></thead><tbody><tr><td><strong>参数化</strong></td><td>是（动态权重）</td><td>是（静态权重）</td><td>否（固定规则）</td></tr><tr><td><strong>自主性提示</strong></td><td>✅ 动态适应输入</td><td>❌ 静态处理</td><td>❌ 静态处理</td></tr><tr><td><strong>输入依赖性</strong></td><td>高度依赖</td><td>不依赖</td><td>不依赖</td></tr><tr><td><strong>典型应用</strong></td><td>Transformer, NLP</td><td>传统分类模型</td><td>CNN 的空间降维</td></tr></tbody></table>',10)]))}const m=n(a,[["render",s]]);export{p as __pageData,m as default};
