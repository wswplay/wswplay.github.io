import{_ as e,c as a,o as t,a as r}from"./app.bcf8bc93.js";const m=JSON.parse('{"title":"深度学习","description":"","frontmatter":{"title":"深度学习"},"headers":[{"level":2,"title":"形态","slug":"形态","link":"#形态","children":[]}],"relativePath":"aiart/machine-learning/deep-learning.md"}'),n={name:"aiart/machine-learning/deep-learning.md"},i=r('<h1 id="深度学习" tabindex="-1">深度学习 <a class="header-anchor" href="#深度学习" aria-hidden="true">#</a></h1><h2 id="形态" tabindex="-1">形态 <a class="header-anchor" href="#形态" aria-hidden="true">#</a></h2><ul><li><p><strong>欠拟合</strong>：这些曲线之间的差距很小，验证损失从未增加，因此网络拟合不足的可能性比拟合过度的可能性更大。如果真是这样的话，那就值得试验更多的容量。</p></li><li><p><strong>过拟合</strong>：现在，验证损失很早就开始增加，而训练损失继续减少。这表明网络已经开始过度填充。在这一点上，我们需要尝试一些措施来防止它，要么减少单位数量，要么通过提前停止等方法。</p></li><li><p><strong>提前停止</strong>：一旦开始过拟合，早期停止回调确实停止了训练。此外，通过包括 <code>restore_best_weights</code>，我们仍然可以将模型保持在验证损失最低的位置。</p></li></ul>',3),s=[i];function o(l,_,c,d,h,p){return t(),a("div",null,s)}const u=e(n,[["render",o]]);export{m as __pageData,u as default};
