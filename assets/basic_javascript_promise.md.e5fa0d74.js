import{_ as e,c as r,o as a,a as o}from"./app.d80f0242.js";const f=JSON.parse('{"title":"Promise","description":"","frontmatter":{"title":"Promise"},"headers":[{"level":2,"title":"Promise.race()","slug":"promise-race","link":"#promise-race","children":[]}],"relativePath":"basic/javascript/promise.md"}'),s={name:"basic/javascript/promise.md"},i=o('<h1 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h1><h2 id="promise-race" tabindex="-1">Promise.race() <a class="header-anchor" href="#promise-race" aria-hidden="true">#</a></h2><p><code>Promise.race(iterable)</code> 方法返回一个 <code>promise</code>，一旦迭代器中的某个 <code>promise</code> 解决或拒绝，返回的 <code>promise</code> 就会解决或拒绝。</p>',3),c=[i];function t(d,p,_,m,n,h){return a(),r("div",null,c)}const P=e(s,[["render",t]]);export{f as __pageData,P as default};
