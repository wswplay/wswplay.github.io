import{_ as s,c as a,o as e,a as n}from"./app.9201e76b.js";const A=JSON.parse('{"title":"冷知识","description":"","frontmatter":{"title":"冷知识"},"headers":[{"level":2,"title":"Object.is()","slug":"object-is","link":"#object-is","children":[]}],"relativePath":"basic/tools/cold-code.md"}'),o={name:"basic/tools/cold-code.md"},l=n(`<h1 id="冷知识-酷代码" tabindex="-1">冷知识-酷代码 <a class="header-anchor" href="#冷知识-酷代码" aria-hidden="true">#</a></h1><p>特殊用法、鲜为人知的用法、hacker 用法、魔改用法。</p><h2 id="object-is" tabindex="-1"><code>Object.is()</code> <a class="header-anchor" href="#object-is" aria-hidden="true">#</a></h2><p><code>Object.is()</code> 方法判断两个值是否为同一个值。</p><p><code>Object.is()</code> 与 == 不同。== 运算符在判断相等前对两边的变量（如果它们不是同一类型）进行强制转换（这种行为将 &quot;&quot; == false 判断为 true），而 <code>Object.is</code> 不会强制转换两边的值。</p><p><code>Object.is()</code> 与 === 也不相同。差别是它们对待有符号的零和 NaN 不同，例如，=== 运算符（也包括 == 运算符）将数字 -0 和 +0 视为相等，而将 Number.NaN 与 NaN 视为不相等。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,7),t=[l];function c(p,r,i,d,C,y){return e(),a("div",null,t)}const _=s(o,[["render",c]]);export{A as __pageData,_ as default};
