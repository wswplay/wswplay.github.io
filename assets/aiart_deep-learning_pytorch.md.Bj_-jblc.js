import{_ as n,c as e,o as a,b as o}from"./chunks/framework._eNwL97Z.js";const l="/assets/compt-graph.1gFJJ1YX.png",b=JSON.parse('{"title":"Pytorch","description":"","frontmatter":{"title":"Pytorch","outline":"deep"},"headers":[{"level":2,"title":"计算图与自动求导","slug":"计算图与自动求导","link":"#计算图与自动求导","children":[]},{"level":2,"title":"VSCode Debugger 调试源码","slug":"vscode-debugger-调试源码","link":"#vscode-debugger-调试源码","children":[]},{"level":2,"title":"方法简介","slug":"方法简介","link":"#方法简介","children":[{"level":3,"title":"unsqueeze","slug":"unsqueeze","link":"#unsqueeze","children":[]}]}],"relativePath":"aiart/deep-learning/pytorch.md","filePath":"aiart/deep-learning/pytorch.md"}'),t={name:"aiart/deep-learning/pytorch.md"};function r(p,s,c,i,u,d){return a(),e("div",null,s[0]||(s[0]=[o('<h1 id="pytorch" tabindex="-1">Pytorch <a class="header-anchor" href="#pytorch" aria-label="Permalink to &quot;Pytorch&quot;">​</a></h1><p>Pytorch is an optimized tensor library for <strong>deep learning</strong> using GPUs and CPUs.</p><p>Summary: Tensors and Dynamic neural networks in Python with strong GPU acceleration.</p><h2 id="计算图与自动求导" tabindex="-1">计算图与自动求导 <a class="header-anchor" href="#计算图与自动求导" aria-label="Permalink to &quot;计算图与自动求导&quot;">​</a></h2><p>计算图（<code>Computational Graphs</code>）是一种描述运算的「语言」，它由<code>节点(Node)</code>和<code>边(Edge)</code>构成。记录所有节点和边的信息，可以方便地完成<strong>自动求导</strong>。</p><ul><li><strong>节点</strong>：表示数据和计算操作。</li><li><strong>边</strong>：表示数据流向。</li></ul><p><img src="'+l+`" alt="An image"></p><h2 id="vscode-debugger-调试源码" tabindex="-1">VSCode Debugger 调试源码 <a class="header-anchor" href="#vscode-debugger-调试源码" aria-label="Permalink to &quot;VSCode Debugger 调试源码&quot;">​</a></h2><ul><li>1、在目标代码处，设置断点 breakpoint。</li><li>2、点击 VSCode 左边栏的「甲壳虫+播放」按钮，并创建调试配置文件(create a launch.json)。</li><li>3、<strong>添加、添加、添加一行 <code>&quot;justMyCode&quot;: false</code></strong>。</li></ul><p><code>VSCode</code>个坑爹的玩意儿，<strong>默认没有<code>justMyCode</code>这个<code>key</code>，那就是 <code>True</code></strong>。老子调了好久都进不去 <code>torch</code> 源码，靠，满头大汗。微软是个大傻逼。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">  // Use IntelliSense to learn about possible attributes.</span></span>
<span class="line"><span style="color:#6A737D;">  // Hover to view descriptions of existing attributes.</span></span>
<span class="line"><span style="color:#6A737D;">  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0.2.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">  &quot;configurations&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Python Debugger: Current File&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;debugpy&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;request&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;launch&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;program&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;\${file}&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">      &quot;console&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;integratedTerminal&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#79B8FF;">      &quot;justMyCode&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="方法简介" tabindex="-1">方法简介 <a class="header-anchor" href="#方法简介" aria-label="Permalink to &quot;方法简介&quot;">​</a></h2><h3 id="unsqueeze" tabindex="-1">unsqueeze <a class="header-anchor" href="#unsqueeze" aria-label="Permalink to &quot;unsqueeze&quot;">​</a></h3><p>PyTorch 中用于在张量指定位置<strong>添加一个新维度</strong>的方法。</p><ul><li>unsqueeze：非原地操作，返回新张量，不修改原张量。</li><li>unsqueeze_：原地操作，修改原张量本身。</li></ul>`,15)]))}const y=n(t,[["render",r]]);export{b as __pageData,y as default};
