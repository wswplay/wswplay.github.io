import{_ as s,c as e,o as n,a}from"./app.ccc00a89.js";const o="/assets/node_flag.282c5e53.png",p="/assets/inspect.5e54aabf.png",t="/assets/json_list.98af469c.png",D=JSON.parse('{"title":"本地怎么调试nodejs项目文件(浏览器)","description":"","frontmatter":{"title":"本地怎么调试nodejs项目文件(浏览器)","outline":"deep"},"headers":[{"level":2,"title":"本地调试 Nodejs(浏览器)","slug":"本地调试-nodejs-浏览器","link":"#本地调试-nodejs-浏览器","children":[{"level":3,"title":"--inspect-brk","slug":"inspect-brk","link":"#inspect-brk","children":[]},{"level":3,"title":"Vitepress 的 debug 命令","slug":"vitepress-的-debug-命令","link":"#vitepress-的-debug-命令","children":[]}]}],"relativePath":"node/debug.md"}'),l={name:"node/debug.md"},r=a(`<h1 id="more-debugging-less-bugs。" tabindex="-1">More Debugging，Less Bugs。 <a class="header-anchor" href="#more-debugging-less-bugs。" aria-hidden="true">#</a></h1><p><strong>调试</strong>，是开发、学习、借鉴的第一步。<br> 是前进的阶梯，是更上一层楼的敲门砖。——鲁迅没说过这话😆</p><h2 id="本地调试-nodejs-浏览器" tabindex="-1">本地调试 Nodejs(浏览器) <a class="header-anchor" href="#本地调试-nodejs-浏览器" aria-hidden="true">#</a></h2><h3 id="inspect-brk" tabindex="-1">--inspect-brk <a class="header-anchor" href="#inspect-brk" aria-hidden="true">#</a></h3><p><strong>1. 使用 --inspect-brk=host:port 标志启动远端服务器内的 inspector 调试器</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--inspect-brk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx.js</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令行，会出现如下信息</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Debugger</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listening</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ws://127.0.0.1:</span><span style="color:#F78C6C;">9229</span><span style="color:#C3E88D;">/a06e74fe-603d-4c6c-</span><span style="color:#F78C6C;">8609</span><span style="color:#C3E88D;">-4a4128968ed9</span></span>
<span class="line"><span style="color:#FFCB6B;">For</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">help,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">see:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://nodejs.org/en/docs/inspector</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这是启用了 V8 检查器，启动了一个 ws 服务，默认端口 9229，加一个动态生成的 UUID, 这时需要一个可以连接该服务的调试客户端。打开 chrome 的开发者工具页面，如果看到 node 的绿色图标，点击就可进入调试。<br><img src="`+o+'" alt="An image"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果没有，在 chrome 的地址栏输入 <code>chrome://inspect/#devices</code><br> 可以看到如下图所示，Remote Target 中会有你启动调试的文件，点击 inspect</p></div><p><img src="'+p+'" alt="An image"></p><p>如果是自定义端口，则点击上图中<code>Discover network targets</code>右侧按钮，添加上你的端口即可。</p><p><strong>或者用另外一种方式打开调试界面</strong><br><strong>2. 在本地访问 <code>http://[host:port]/json/list</code> 得到 <code>devtoolsFrontendUrl</code>。</strong><br><strong>3. 本地访问 <code>devtoolsFrontendUrl</code> 得到调试界面。</strong></p><p><img src="'+t+`" alt="An image"></p><h3 id="vitepress-的-debug-命令" tabindex="-1">Vitepress 的 debug 命令 <a class="header-anchor" href="#vitepress-的-debug-命令" aria-hidden="true">#</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">docs-debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node --inspect-brk ./bin/vitepress dev docs</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,16),c=[r];function i(d,b,g,u,h,C){return n(),e("div",null,c)}const y=s(l,[["render",i]]);export{D as __pageData,y as default};
